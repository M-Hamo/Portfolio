{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ZIndexUtils } from 'primeng/utils';\nconst _c0 = [\"container\"];\nconst _c1 = [\"inputfield\"];\nconst _c2 = [\"contentWrapper\"];\n\nfunction Calendar_ng_template_2_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function Calendar_ng_template_2_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      i0.ɵɵnextContext();\n\n      const _r3 = i0.ɵɵreference(1);\n\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onButtonClick($event, _r3);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r4.icon)(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.iconAriaLabel);\n  }\n}\n\nfunction Calendar_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 4, 5);\n    i0.ɵɵlistener(\"focus\", function Calendar_ng_template_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onInputFocus($event);\n    })(\"keydown\", function Calendar_ng_template_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onInputKeydown($event);\n    })(\"click\", function Calendar_ng_template_2_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onInputClick();\n    })(\"blur\", function Calendar_ng_template_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onInputBlur($event);\n    })(\"input\", function Calendar_ng_template_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onUserInput($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Calendar_ng_template_2_button_2_Template, 1, 3, \"button\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonlyInput)(\"ngStyle\", ctx_r1.inputStyle)(\"placeholder\", ctx_r1.placeholder || \"\")(\"disabled\", ctx_r1.disabled)(\"ngClass\", \"p-inputtext p-component\");\n    i0.ɵɵattribute(\"id\", ctx_r1.inputId)(\"name\", ctx_r1.name)(\"required\", ctx_r1.required)(\"aria-required\", ctx_r1.required)(\"tabindex\", ctx_r1.tabindex)(\"inputmode\", ctx_r1.touchUI ? \"off\" : null)(\"aria-labelledby\", ctx_r1.ariaLabelledBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showIcon);\n  }\n}\n\nfunction Calendar_div_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_ng_container_4_div_2_button_2_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(4);\n      return ctx_r30.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_ng_container_4_div_2_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r32 = i0.ɵɵnextContext(4);\n      return ctx_r32.onPrevButtonClick($event);\n    });\n    i0.ɵɵelement(1, \"span\", 28);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r24.getTranslation(\"monthNames\")[month_r21.month]);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const monthName_r35 = ctx.$implicit;\n    const i_r36 = ctx.index;\n    const month_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"value\", i_r36)(\"selected\", i_r36 === month_r21.month);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(monthName_r35);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 30);\n    i0.ɵɵlistener(\"change\", function Calendar_div_3_ng_container_4_div_2_select_5_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext(4);\n      return ctx_r38.onMonthDropdownChange($event.target.value);\n    });\n    i0.ɵɵtemplate(1, Calendar_div_3_ng_container_4_div_2_select_5_option_1_Template, 2, 3, \"option\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r25.getTranslation(\"monthNames\"));\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_select_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r41 = ctx.$implicit;\n    const ctx_r40 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"value\", year_r41)(\"selected\", year_r41 === ctx_r40.currentYear);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(year_r41);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_select_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 33);\n    i0.ɵɵlistener(\"change\", function Calendar_div_3_ng_container_4_div_2_select_6_Template_select_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext(4);\n      return ctx_r42.onYearDropdownChange($event.target.value);\n    });\n    i0.ɵɵtemplate(1, Calendar_div_3_ng_container_4_div_2_select_6_option_1_Template, 2, 3, \"option\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r26.yearOptions);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r27.view === \"month\" ? ctx_r27.currentYear : month_r21.year);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_ng_container_4_div_2_button_8_Template_button_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(4);\n      return ctx_r45.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_ng_container_4_div_2_button_8_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext(4);\n      return ctx_r47.onNextButtonClick($event);\n    });\n    i0.ɵɵelement(1, \"span\", 36);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 42);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r48.getTranslation(\"weekHeader\"));\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 43);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const weekDay_r51 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weekDay_r51);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 46);\n    i0.ɵɵelementStart(1, \"span\", 47);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const j_r55 = i0.ɵɵnextContext().index;\n    const month_r21 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", month_r21.weekNumbers[j_r55], \" \");\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const date_r60 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(date_r60.day);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nconst _c4 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r67 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 49);\n    i0.ɵɵlistener(\"click\", function Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_Template_span_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const date_r60 = i0.ɵɵnextContext().$implicit;\n      const ctx_r65 = i0.ɵɵnextContext(6);\n      return ctx_r65.onDateSelect($event, date_r60);\n    })(\"keydown\", function Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_Template_span_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const date_r60 = i0.ɵɵnextContext().$implicit;\n      const i_r22 = i0.ɵɵnextContext(3).index;\n      const ctx_r68 = i0.ɵɵnextContext(3);\n      return ctx_r68.onDateCellKeydown($event, date_r60, i_r22);\n    });\n    i0.ɵɵtemplate(2, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵtemplate(3, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_ng_container_3_Template, 1, 0, \"ng-container\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const date_r60 = i0.ɵɵnextContext().$implicit;\n    const ctx_r61 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c3, ctx_r61.isSelected(date_r60), !date_r60.selectable));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r61.dateTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r61.dateTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c4, date_r60));\n  }\n}\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"p-datepicker-other-month\": a0,\n    \"p-datepicker-today\": a1\n  };\n};\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 48);\n    i0.ɵɵtemplate(1, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_ng_container_1_Template, 4, 9, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const date_r60 = ctx.$implicit;\n    const ctx_r57 = i0.ɵɵnextContext(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c5, date_r60.otherMonth, date_r60.today));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", date_r60.otherMonth ? ctx_r57.showOtherMonths : true);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_1_Template, 3, 1, \"td\", 44);\n    i0.ɵɵtemplate(2, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_td_2_Template, 2, 5, \"td\", 45);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r54 = ctx.$implicit;\n    const ctx_r50 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r50.showWeek);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", week_r54);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵelementStart(1, \"table\", 38);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵtemplate(4, Calendar_div_3_ng_container_4_div_2_div_9_th_4_Template, 3, 1, \"th\", 39);\n    i0.ɵɵtemplate(5, Calendar_div_3_ng_container_4_div_2_div_9_th_5_Template, 3, 1, \"th\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"tbody\");\n    i0.ɵɵtemplate(7, Calendar_div_3_ng_container_4_div_2_div_9_tr_7_Template, 3, 2, \"tr\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r29.showWeek);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r29.weekDays);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", month_r21.dates);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtemplate(2, Calendar_div_3_ng_container_4_div_2_button_2_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵtemplate(4, Calendar_div_3_ng_container_4_div_2_span_4_Template, 2, 1, \"span\", 21);\n    i0.ɵɵtemplate(5, Calendar_div_3_ng_container_4_div_2_select_5_Template, 2, 1, \"select\", 22);\n    i0.ɵɵtemplate(6, Calendar_div_3_ng_container_4_div_2_select_6_Template, 2, 1, \"select\", 23);\n    i0.ɵɵtemplate(7, Calendar_div_3_ng_container_4_div_2_span_7_Template, 2, 1, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, Calendar_div_3_ng_container_4_div_2_button_8_Template, 2, 0, \"button\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, Calendar_div_3_ng_container_4_div_2_div_9_Template, 8, 3, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r22 = ctx.index;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r22 === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.monthNavigator && ctx_r19.view !== \"month\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.monthNavigator && ctx_r19.view !== \"month\" && ctx_r19.numberOfMonths === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.yearNavigator && ctx_r19.numberOfMonths === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.yearNavigator);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.numberOfMonths === 1 ? true : i_r22 === ctx_r19.numberOfMonths - 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.view === \"date\");\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r77 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵlistener(\"click\", function Calendar_div_3_ng_container_4_div_3_span_1_Template_span_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r77);\n      const i_r75 = restoredCtx.index;\n      const ctx_r76 = i0.ɵɵnextContext(4);\n      return ctx_r76.onMonthSelect($event, i_r75);\n    })(\"keydown\", function Calendar_div_3_ng_container_4_div_3_span_1_Template_span_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r77);\n      const i_r75 = restoredCtx.index;\n      const ctx_r78 = i0.ɵɵnextContext(4);\n      return ctx_r78.onMonthCellKeydown($event, i_r75);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r74 = ctx.$implicit;\n    const i_r75 = ctx.index;\n    const ctx_r73 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c3, ctx_r73.isMonthSelected(i_r75), !ctx_r73.isSelectable(1, i_r75, ctx_r73.currentYear, false)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", m_r74, \" \");\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, Calendar_div_3_ng_container_4_div_3_span_1_Template, 2, 5, \"span\", 52);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r20.monthPickerValues);\n  }\n}\n\nfunction Calendar_div_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtemplate(2, Calendar_div_3_ng_container_4_div_2_Template, 10, 7, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Calendar_div_3_ng_container_4_div_3_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.months);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.view === \"month\");\n  }\n}\n\nfunction Calendar_div_3_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"0\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction Calendar_div_3_div_5_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"0\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction Calendar_div_3_div_5_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 59);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r81 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r81.timeSeparator);\n  }\n}\n\nfunction Calendar_div_3_div_5_div_21_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"0\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction Calendar_div_3_div_5_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r86 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 64);\n    i0.ɵɵelementStart(1, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_div_21_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r85 = i0.ɵɵnextContext(3);\n      return ctx_r85.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_div_21_Template_button_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r87 = i0.ɵɵnextContext(3);\n      return ctx_r87.incrementSecond($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_div_21_Template_button_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r88 = i0.ɵɵnextContext(3);\n      return ctx_r88.onTimePickerElementMouseDown($event, 2, 1);\n    })(\"mouseup\", function Calendar_div_3_div_5_div_21_Template_button_mouseup_1_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r89 = i0.ɵɵnextContext(3);\n      return ctx_r89.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_div_21_Template_button_mouseleave_1_listener() {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r90 = i0.ɵɵnextContext(3);\n      return ctx_r90.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(2, \"span\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtemplate(4, Calendar_div_3_div_5_div_21_ng_container_4_Template, 2, 0, \"ng-container\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_div_21_Template_button_keydown_6_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r91 = i0.ɵɵnextContext(3);\n      return ctx_r91.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_div_21_Template_button_keydown_enter_6_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r92 = i0.ɵɵnextContext(3);\n      return ctx_r92.decrementSecond($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_div_21_Template_button_mousedown_6_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r93 = i0.ɵɵnextContext(3);\n      return ctx_r93.onTimePickerElementMouseDown($event, 2, -1);\n    })(\"mouseup\", function Calendar_div_3_div_5_div_21_Template_button_mouseup_6_listener($event) {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r94 = i0.ɵɵnextContext(3);\n      return ctx_r94.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_div_21_Template_button_mouseleave_6_listener() {\n      i0.ɵɵrestoreView(_r86);\n      const ctx_r95 = i0.ɵɵnextContext(3);\n      return ctx_r95.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(7, \"span\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r82 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r82.currentSecond < 10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r82.currentSecond);\n  }\n}\n\nfunction Calendar_div_3_div_5_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r97 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 65);\n    i0.ɵɵelementStart(1, \"button\", 66);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_div_22_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r96 = i0.ɵɵnextContext(3);\n      return ctx_r96.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_div_5_div_22_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r98 = i0.ɵɵnextContext(3);\n      return ctx_r98.toggleAMPM($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_div_22_Template_button_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r99 = i0.ɵɵnextContext(3);\n      return ctx_r99.toggleAMPM($event);\n    });\n    i0.ɵɵelement(2, \"span\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 66);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_div_22_Template_button_keydown_5_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r100 = i0.ɵɵnextContext(3);\n      return ctx_r100.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_div_5_div_22_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r101 = i0.ɵɵnextContext(3);\n      return ctx_r101.toggleAMPM($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_div_22_Template_button_keydown_enter_5_listener($event) {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r102 = i0.ɵɵnextContext(3);\n      return ctx_r102.toggleAMPM($event);\n    });\n    i0.ɵɵelement(6, \"span\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r83 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r83.pm ? \"PM\" : \"AM\");\n  }\n}\n\nfunction Calendar_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r104 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵelementStart(1, \"div\", 55);\n    i0.ɵɵelementStart(2, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_Template_button_keydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r103 = i0.ɵɵnextContext(2);\n      return ctx_r103.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_Template_button_keydown_enter_2_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r105 = i0.ɵɵnextContext(2);\n      return ctx_r105.incrementHour($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r106 = i0.ɵɵnextContext(2);\n      return ctx_r106.onTimePickerElementMouseDown($event, 0, 1);\n    })(\"mouseup\", function Calendar_div_3_div_5_Template_button_mouseup_2_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r107 = i0.ɵɵnextContext(2);\n      return ctx_r107.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_Template_button_mouseleave_2_listener() {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r108 = i0.ɵɵnextContext(2);\n      return ctx_r108.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(3, \"span\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtemplate(5, Calendar_div_3_div_5_ng_container_5_Template, 2, 0, \"ng-container\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_Template_button_keydown_7_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r109 = i0.ɵɵnextContext(2);\n      return ctx_r109.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_Template_button_keydown_enter_7_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r110 = i0.ɵɵnextContext(2);\n      return ctx_r110.decrementHour($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_Template_button_mousedown_7_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r111 = i0.ɵɵnextContext(2);\n      return ctx_r111.onTimePickerElementMouseDown($event, 0, -1);\n    })(\"mouseup\", function Calendar_div_3_div_5_Template_button_mouseup_7_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r112 = i0.ɵɵnextContext(2);\n      return ctx_r112.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_Template_button_mouseleave_7_listener() {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r113 = i0.ɵɵnextContext(2);\n      return ctx_r113.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(8, \"span\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 59);\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 60);\n    i0.ɵɵelementStart(13, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_Template_button_keydown_13_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r114 = i0.ɵɵnextContext(2);\n      return ctx_r114.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_Template_button_keydown_enter_13_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r115 = i0.ɵɵnextContext(2);\n      return ctx_r115.incrementMinute($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_Template_button_mousedown_13_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r116 = i0.ɵɵnextContext(2);\n      return ctx_r116.onTimePickerElementMouseDown($event, 1, 1);\n    })(\"mouseup\", function Calendar_div_3_div_5_Template_button_mouseup_13_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r117 = i0.ɵɵnextContext(2);\n      return ctx_r117.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_Template_button_mouseleave_13_listener() {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r118 = i0.ɵɵnextContext(2);\n      return ctx_r118.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(14, \"span\", 57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtemplate(16, Calendar_div_3_div_5_ng_container_16_Template, 2, 0, \"ng-container\", 11);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 56);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_5_Template_button_keydown_18_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r119 = i0.ɵɵnextContext(2);\n      return ctx_r119.onContainerButtonKeydown($event);\n    })(\"keydown.enter\", function Calendar_div_3_div_5_Template_button_keydown_enter_18_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r120 = i0.ɵɵnextContext(2);\n      return ctx_r120.decrementMinute($event);\n    })(\"mousedown\", function Calendar_div_3_div_5_Template_button_mousedown_18_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r121 = i0.ɵɵnextContext(2);\n      return ctx_r121.onTimePickerElementMouseDown($event, 1, -1);\n    })(\"mouseup\", function Calendar_div_3_div_5_Template_button_mouseup_18_listener($event) {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r122 = i0.ɵɵnextContext(2);\n      return ctx_r122.onTimePickerElementMouseUp($event);\n    })(\"mouseleave\", function Calendar_div_3_div_5_Template_button_mouseleave_18_listener() {\n      i0.ɵɵrestoreView(_r104);\n      const ctx_r123 = i0.ɵɵnextContext(2);\n      return ctx_r123.onTimePickerElementMouseLeave();\n    });\n    i0.ɵɵelement(19, \"span\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, Calendar_div_3_div_5_div_20_Template, 3, 1, \"div\", 61);\n    i0.ɵɵtemplate(21, Calendar_div_3_div_5_div_21_Template, 8, 2, \"div\", 62);\n    i0.ɵɵtemplate(22, Calendar_div_3_div_5_div_22_Template, 7, 1, \"div\", 63);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.currentHour < 10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.currentHour);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r16.timeSeparator);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.currentMinute < 10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.currentMinute);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.showSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.showSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.hourFormat == \"12\");\n  }\n}\n\nconst _c6 = function (a0) {\n  return [a0];\n};\n\nfunction Calendar_div_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r125 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵelementStart(1, \"button\", 68);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_6_Template_button_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r125);\n      const ctx_r124 = i0.ɵɵnextContext(2);\n      return ctx_r124.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_div_6_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r125);\n      const ctx_r126 = i0.ɵɵnextContext(2);\n      return ctx_r126.onTodayButtonClick($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 68);\n    i0.ɵɵlistener(\"keydown\", function Calendar_div_3_div_6_Template_button_keydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r125);\n      const ctx_r127 = i0.ɵɵnextContext(2);\n      return ctx_r127.onContainerButtonKeydown($event);\n    })(\"click\", function Calendar_div_3_div_6_Template_button_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r125);\n      const ctx_r128 = i0.ɵɵnextContext(2);\n      return ctx_r128.onClearButtonClick($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r17.getTranslation(\"today\"))(\"ngClass\", i0.ɵɵpureFunction1(4, _c6, ctx_r17.todayButtonStyleClass));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", ctx_r17.getTranslation(\"clear\"))(\"ngClass\", i0.ɵɵpureFunction1(6, _c6, ctx_r17.clearButtonStyleClass));\n  }\n}\n\nfunction Calendar_div_3_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c7 = function (a1, a2, a3, a4, a5, a6) {\n  return {\n    \"p-datepicker p-component\": true,\n    \"p-datepicker-inline\": a1,\n    \"p-disabled\": a2,\n    \"p-datepicker-timeonly\": a3,\n    \"p-datepicker-multiple-month\": a4,\n    \"p-datepicker-monthpicker\": a5,\n    \"p-datepicker-touch-ui\": a6\n  };\n};\n\nconst _c8 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c9 = function (a1) {\n  return {\n    value: \"visibleTouchUI\",\n    params: a1\n  };\n};\n\nconst _c10 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction Calendar_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r130 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵlistener(\"@overlayAnimation.start\", function Calendar_div_3_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r130);\n      const ctx_r129 = i0.ɵɵnextContext();\n      return ctx_r129.onOverlayAnimationStart($event);\n    })(\"@overlayAnimation.done\", function Calendar_div_3_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r130);\n      const ctx_r131 = i0.ɵɵnextContext();\n      return ctx_r131.onOverlayAnimationDone($event);\n    })(\"click\", function Calendar_div_3_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r130);\n      const ctx_r132 = i0.ɵɵnextContext();\n      return ctx_r132.onOverlayClick($event);\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵtemplate(3, Calendar_div_3_ng_container_3_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵtemplate(4, Calendar_div_3_ng_container_4_Template, 4, 2, \"ng-container\", 11);\n    i0.ɵɵtemplate(5, Calendar_div_3_div_5_Template, 23, 8, \"div\", 12);\n    i0.ɵɵtemplate(6, Calendar_div_3_div_6_Template, 3, 8, \"div\", 13);\n    i0.ɵɵprojection(7, 1);\n    i0.ɵɵtemplate(8, Calendar_div_3_ng_container_8_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.panelStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.panelStyle)(\"ngClass\", i0.ɵɵpureFunction6(11, _c7, ctx_r2.inline, ctx_r2.disabled, ctx_r2.timeOnly, ctx_r2.numberOfMonths > 1, ctx_r2.view === \"month\", ctx_r2.touchUI))(\"@overlayAnimation\", ctx_r2.touchUI ? i0.ɵɵpureFunction1(21, _c9, i0.ɵɵpureFunction2(18, _c8, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions)) : i0.ɵɵpureFunction1(26, _c10, i0.ɵɵpureFunction2(23, _c8, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions)))(\"@.disabled\", ctx_r2.inline === true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.timeOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showTime || ctx_r2.timeOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showButtonBar);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.footerTemplate);\n  }\n}\n\nconst _c11 = [[[\"p-header\"]], [[\"p-footer\"]]];\n\nconst _c12 = function (a1, a2, a3, a4) {\n  return {\n    \"p-calendar\": true,\n    \"p-calendar-w-btn\": a1,\n    \"p-calendar-timeonly\": a2,\n    \"p-calendar-disabled\": a3,\n    \"p-focus\": a4\n  };\n};\n\nconst _c13 = [\"p-header\", \"p-footer\"];\nconst CALENDAR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Calendar),\n  multi: true\n};\nlet Calendar = /*#__PURE__*/(() => {\n  class Calendar {\n    constructor(el, renderer, cd, zone, config, overlayService) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.multipleSeparator = ',';\n      this.rangeSeparator = '-';\n      this.inline = false;\n      this.showOtherMonths = true;\n      this.icon = 'pi pi-calendar';\n      this.shortYearCutoff = '+10';\n      this.hourFormat = '24';\n      this.stepHour = 1;\n      this.stepMinute = 1;\n      this.stepSecond = 1;\n      this.showSeconds = false;\n      this.showOnFocus = true;\n      this.showWeek = false;\n      this.dataType = 'date';\n      this.selectionMode = 'single';\n      this.todayButtonStyleClass = 'p-button-text';\n      this.clearButtonStyleClass = 'p-button-text';\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.keepInvalid = false;\n      this.hideOnDateTimeSelect = true;\n      this.numberOfMonths = 1;\n      this.view = 'date';\n      this.timeSeparator = \":\";\n      this.focusTrap = true;\n      this.firstDayOfWeek = 0;\n      this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n      this.hideTransitionOptions = '.1s linear';\n      this.onFocus = new EventEmitter();\n      this.onBlur = new EventEmitter();\n      this.onClose = new EventEmitter();\n      this.onSelect = new EventEmitter();\n      this.onInput = new EventEmitter();\n      this.onTodayClick = new EventEmitter();\n      this.onClearClick = new EventEmitter();\n      this.onMonthChange = new EventEmitter();\n      this.onYearChange = new EventEmitter();\n      this.onClickOutside = new EventEmitter();\n      this.onShow = new EventEmitter();\n\n      this.onModelChange = () => {};\n\n      this.onModelTouched = () => {};\n\n      this.inputFieldValue = null;\n      this.navigationState = null;\n\n      this.convertTo24Hour = function (hours, pm) {\n        if (this.hourFormat == '12') {\n          if (hours === 12) {\n            return pm ? 12 : 0;\n          } else {\n            return pm ? hours + 12 : hours;\n          }\n        }\n\n        return hours;\n      };\n    }\n\n    set content(content) {\n      this.contentViewChild = content;\n\n      if (this.contentViewChild) {\n        if (this.isMonthNavigate) {\n          Promise.resolve(null).then(() => this.updateFocus());\n          this.isMonthNavigate = false;\n        } else {\n          this.initFocusableCell();\n        }\n      }\n    }\n\n    get defaultDate() {\n      return this._defaultDate;\n    }\n\n    set defaultDate(defaultDate) {\n      this._defaultDate = defaultDate;\n\n      if (this.initialized) {\n        const date = defaultDate || new Date();\n        this.currentMonth = date.getMonth();\n        this.currentYear = date.getFullYear();\n        this.initTime(date);\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    get minDate() {\n      return this._minDate;\n    }\n\n    set minDate(date) {\n      this._minDate = date;\n\n      if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    get maxDate() {\n      return this._maxDate;\n    }\n\n    set maxDate(date) {\n      this._maxDate = date;\n\n      if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    get disabledDates() {\n      return this._disabledDates;\n    }\n\n    set disabledDates(disabledDates) {\n      this._disabledDates = disabledDates;\n\n      if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    get disabledDays() {\n      return this._disabledDays;\n    }\n\n    set disabledDays(disabledDays) {\n      this._disabledDays = disabledDays;\n\n      if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    get yearRange() {\n      return this._yearRange;\n    }\n\n    set yearRange(yearRange) {\n      this._yearRange = yearRange;\n\n      if (yearRange) {\n        const years = yearRange.split(':');\n        const yearStart = parseInt(years[0]);\n        const yearEnd = parseInt(years[1]);\n        this.populateYearOptions(yearStart, yearEnd);\n      }\n    }\n\n    get showTime() {\n      return this._showTime;\n    }\n\n    set showTime(showTime) {\n      this._showTime = showTime;\n\n      if (this.currentHour === undefined) {\n        this.initTime(this.value || new Date());\n      }\n\n      this.updateInputfield();\n    }\n\n    get locale() {\n      return this._locale;\n    }\n\n    set locale(newLocale) {\n      console.warn(\"Locale property has no effect, use new i18n API instead.\");\n    }\n\n    ngOnInit() {\n      const date = this.defaultDate || new Date();\n      this.currentMonth = date.getMonth();\n      this.currentYear = date.getFullYear();\n\n      if (this.view === 'date') {\n        this.createWeekDays();\n        this.initTime(date);\n        this.createMonths(this.currentMonth, this.currentYear);\n        this.ticksTo1970 = ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000;\n      } else if (this.view === 'month') {\n        this.createMonthPickerValues();\n      }\n\n      this.translationSubscription = this.config.translationObserver.subscribe(() => {\n        this.createWeekDays();\n      });\n      this.initialized = true;\n    }\n\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'date':\n            this.dateTemplate = item.template;\n            break;\n\n          case 'disabledDate':\n            this.disabledDateTemplate = item.template;\n            break;\n\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n\n          default:\n            this.dateTemplate = item.template;\n            break;\n        }\n      });\n    }\n\n    getTranslation(option) {\n      return this.config.getTranslation(option);\n    }\n\n    populateYearOptions(start, end) {\n      this.yearOptions = [];\n\n      for (let i = start; i <= end; i++) {\n        this.yearOptions.push(i);\n      }\n    }\n\n    createWeekDays() {\n      this.weekDays = [];\n      let dayIndex = this.firstDayOfWeek;\n      let dayLabels = this.getTranslation(TranslationKeys.DAY_NAMES_MIN);\n\n      for (let i = 0; i < 7; i++) {\n        this.weekDays.push(dayLabels[dayIndex]);\n        dayIndex = dayIndex == 6 ? 0 : ++dayIndex;\n      }\n    }\n\n    createMonthPickerValues() {\n      this.monthPickerValues = [];\n      let monthLabels = this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT);\n\n      for (let i = 0; i <= 11; i++) {\n        this.monthPickerValues.push(monthLabels[i]);\n      }\n    }\n\n    createMonths(month, year) {\n      this.months = this.months = [];\n\n      for (let i = 0; i < this.numberOfMonths; i++) {\n        let m = month + i;\n        let y = year;\n\n        if (m > 11) {\n          m = m % 11 - 1;\n          y = year + 1;\n        }\n\n        this.months.push(this.createMonth(m, y));\n      }\n    }\n\n    getWeekNumber(date) {\n      let checkDate = new Date(date.getTime());\n      checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n      let time = checkDate.getTime();\n      checkDate.setMonth(0);\n      checkDate.setDate(1);\n      return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\n    }\n\n    createMonth(month, year) {\n      let dates = [];\n      let firstDay = this.getFirstDayOfMonthIndex(month, year);\n      let daysLength = this.getDaysCountInMonth(month, year);\n      let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\n      let dayNo = 1;\n      let today = new Date();\n      let weekNumbers = [];\n      let monthRows = Math.ceil((daysLength + firstDay) / 7);\n\n      for (let i = 0; i < monthRows; i++) {\n        let week = [];\n\n        if (i == 0) {\n          for (let j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {\n            let prev = this.getPreviousMonthAndYear(month, year);\n            week.push({\n              day: j,\n              month: prev.month,\n              year: prev.year,\n              otherMonth: true,\n              today: this.isToday(today, j, prev.month, prev.year),\n              selectable: this.isSelectable(j, prev.month, prev.year, true)\n            });\n          }\n\n          let remainingDaysLength = 7 - week.length;\n\n          for (let j = 0; j < remainingDaysLength; j++) {\n            week.push({\n              day: dayNo,\n              month: month,\n              year: year,\n              today: this.isToday(today, dayNo, month, year),\n              selectable: this.isSelectable(dayNo, month, year, false)\n            });\n            dayNo++;\n          }\n        } else {\n          for (let j = 0; j < 7; j++) {\n            if (dayNo > daysLength) {\n              let next = this.getNextMonthAndYear(month, year);\n              week.push({\n                day: dayNo - daysLength,\n                month: next.month,\n                year: next.year,\n                otherMonth: true,\n                today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n                selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true)\n              });\n            } else {\n              week.push({\n                day: dayNo,\n                month: month,\n                year: year,\n                today: this.isToday(today, dayNo, month, year),\n                selectable: this.isSelectable(dayNo, month, year, false)\n              });\n            }\n\n            dayNo++;\n          }\n        }\n\n        if (this.showWeek) {\n          weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\n        }\n\n        dates.push(week);\n      }\n\n      return {\n        month: month,\n        year: year,\n        dates: dates,\n        weekNumbers: weekNumbers\n      };\n    }\n\n    initTime(date) {\n      this.pm = date.getHours() > 11;\n\n      if (this.showTime) {\n        this.currentMinute = date.getMinutes();\n        this.currentSecond = date.getSeconds();\n        this.setCurrentHourPM(date.getHours());\n      } else if (this.timeOnly) {\n        this.currentMinute = 0;\n        this.currentHour = 0;\n        this.currentSecond = 0;\n      }\n    }\n\n    navBackward(event) {\n      event.stopPropagation();\n\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      this.isMonthNavigate = true;\n\n      if (this.view === 'month') {\n        this.decrementYear();\n        setTimeout(() => {\n          this.updateFocus();\n        }, 1);\n      } else {\n        if (this.currentMonth === 0) {\n          this.currentMonth = 11;\n          this.decrementYear();\n        } else {\n          this.currentMonth--;\n        }\n\n        this.onMonthChange.emit({\n          month: this.currentMonth + 1,\n          year: this.currentYear\n        });\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    navForward(event) {\n      event.stopPropagation();\n\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      this.isMonthNavigate = true;\n\n      if (this.view === 'month') {\n        this.incrementYear();\n        setTimeout(() => {\n          this.updateFocus();\n        }, 1);\n      } else {\n        if (this.currentMonth === 11) {\n          this.currentMonth = 0;\n          this.incrementYear();\n        } else {\n          this.currentMonth++;\n        }\n\n        this.onMonthChange.emit({\n          month: this.currentMonth + 1,\n          year: this.currentYear\n        });\n        this.createMonths(this.currentMonth, this.currentYear);\n      }\n    }\n\n    decrementYear() {\n      this.currentYear--;\n\n      if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {\n        let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n        this.populateYearOptions(this.yearOptions[0] - difference, this.yearOptions[this.yearOptions.length - 1] - difference);\n      }\n    }\n\n    incrementYear() {\n      this.currentYear++;\n\n      if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {\n        let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\n        this.populateYearOptions(this.yearOptions[0] + difference, this.yearOptions[this.yearOptions.length - 1] + difference);\n      }\n    }\n\n    onDateSelect(event, dateMeta) {\n      if (this.disabled || !dateMeta.selectable) {\n        event.preventDefault();\n        return;\n      }\n\n      if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n        this.value = this.value.filter((date, i) => {\n          return !this.isDateEquals(date, dateMeta);\n        });\n\n        if (this.value.length === 0) {\n          this.value = null;\n        }\n\n        this.updateModel(this.value);\n      } else {\n        if (this.shouldSelectDate(dateMeta)) {\n          this.selectDate(dateMeta);\n        }\n      }\n\n      if (this.isSingleSelection() && this.hideOnDateTimeSelect) {\n        setTimeout(() => {\n          event.preventDefault();\n          this.hideOverlay();\n\n          if (this.mask) {\n            this.disableModality();\n          }\n\n          this.cd.markForCheck();\n        }, 150);\n      }\n\n      this.updateInputfield();\n      event.preventDefault();\n    }\n\n    shouldSelectDate(dateMeta) {\n      if (this.isMultipleSelection()) return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;else return true;\n    }\n\n    onMonthSelect(event, index) {\n      if (!DomHandler.hasClass(event.target, 'p-disabled')) {\n        this.onDateSelect(event, {\n          year: this.currentYear,\n          month: index,\n          day: 1,\n          selectable: true\n        });\n      }\n    }\n\n    updateInputfield() {\n      let formattedValue = '';\n\n      if (this.value) {\n        if (this.isSingleSelection()) {\n          formattedValue = this.formatDateTime(this.value);\n        } else if (this.isMultipleSelection()) {\n          for (let i = 0; i < this.value.length; i++) {\n            let dateAsString = this.formatDateTime(this.value[i]);\n            formattedValue += dateAsString;\n\n            if (i !== this.value.length - 1) {\n              formattedValue += this.multipleSeparator + ' ';\n            }\n          }\n        } else if (this.isRangeSelection()) {\n          if (this.value && this.value.length) {\n            let startDate = this.value[0];\n            let endDate = this.value[1];\n            formattedValue = this.formatDateTime(startDate);\n\n            if (endDate) {\n              formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);\n            }\n          }\n        }\n      }\n\n      this.inputFieldValue = formattedValue;\n      this.updateFilledState();\n\n      if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\n        this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;\n      }\n    }\n\n    formatDateTime(date) {\n      let formattedValue = null;\n\n      if (date) {\n        if (this.timeOnly) {\n          formattedValue = this.formatTime(date);\n        } else {\n          formattedValue = this.formatDate(date, this.getDateFormat());\n\n          if (this.showTime) {\n            formattedValue += ' ' + this.formatTime(date);\n          }\n        }\n      }\n\n      return formattedValue;\n    }\n\n    setCurrentHourPM(hours) {\n      if (this.hourFormat == '12') {\n        this.pm = hours > 11;\n\n        if (hours >= 12) {\n          this.currentHour = hours == 12 ? 12 : hours - 12;\n        } else {\n          this.currentHour = hours == 0 ? 12 : hours;\n        }\n      } else {\n        this.currentHour = hours;\n      }\n    }\n\n    selectDate(dateMeta) {\n      let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n\n      if (this.showTime) {\n        if (this.hourFormat == '12') {\n          if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n        } else {\n          date.setHours(this.currentHour);\n        }\n\n        date.setMinutes(this.currentMinute);\n        date.setSeconds(this.currentSecond);\n      }\n\n      if (this.minDate && this.minDate > date) {\n        date = this.minDate;\n        this.setCurrentHourPM(date.getHours());\n        this.currentMinute = date.getMinutes();\n        this.currentSecond = date.getSeconds();\n      }\n\n      if (this.maxDate && this.maxDate < date) {\n        date = this.maxDate;\n        this.setCurrentHourPM(date.getHours());\n        this.currentMinute = date.getMinutes();\n        this.currentSecond = date.getSeconds();\n      }\n\n      if (this.isSingleSelection()) {\n        this.updateModel(date);\n      } else if (this.isMultipleSelection()) {\n        this.updateModel(this.value ? [...this.value, date] : [date]);\n      } else if (this.isRangeSelection()) {\n        if (this.value && this.value.length) {\n          let startDate = this.value[0];\n          let endDate = this.value[1];\n\n          if (!endDate && date.getTime() >= startDate.getTime()) {\n            endDate = date;\n          } else {\n            startDate = date;\n            endDate = null;\n          }\n\n          this.updateModel([startDate, endDate]);\n        } else {\n          this.updateModel([date, null]);\n        }\n      }\n\n      this.onSelect.emit(date);\n    }\n\n    updateModel(value) {\n      this.value = value;\n\n      if (this.dataType == 'date') {\n        this.onModelChange(this.value);\n      } else if (this.dataType == 'string') {\n        if (this.isSingleSelection()) {\n          this.onModelChange(this.formatDateTime(this.value));\n        } else {\n          let stringArrValue = null;\n\n          if (this.value) {\n            stringArrValue = this.value.map(date => this.formatDateTime(date));\n          }\n\n          this.onModelChange(stringArrValue);\n        }\n      }\n    }\n\n    getFirstDayOfMonthIndex(month, year) {\n      let day = new Date();\n      day.setDate(1);\n      day.setMonth(month);\n      day.setFullYear(year);\n      let dayIndex = day.getDay() + this.getSundayIndex();\n      return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\n    }\n\n    getDaysCountInMonth(month, year) {\n      return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\n    }\n\n    getDaysCountInPrevMonth(month, year) {\n      let prev = this.getPreviousMonthAndYear(month, year);\n      return this.getDaysCountInMonth(prev.month, prev.year);\n    }\n\n    getPreviousMonthAndYear(month, year) {\n      let m, y;\n\n      if (month === 0) {\n        m = 11;\n        y = year - 1;\n      } else {\n        m = month - 1;\n        y = year;\n      }\n\n      return {\n        'month': m,\n        'year': y\n      };\n    }\n\n    getNextMonthAndYear(month, year) {\n      let m, y;\n\n      if (month === 11) {\n        m = 0;\n        y = year + 1;\n      } else {\n        m = month + 1;\n        y = year;\n      }\n\n      return {\n        'month': m,\n        'year': y\n      };\n    }\n\n    getSundayIndex() {\n      return this.firstDayOfWeek > 0 ? 7 - this.firstDayOfWeek : 0;\n    }\n\n    isSelected(dateMeta) {\n      if (this.value) {\n        if (this.isSingleSelection()) {\n          return this.isDateEquals(this.value, dateMeta);\n        } else if (this.isMultipleSelection()) {\n          let selected = false;\n\n          for (let date of this.value) {\n            selected = this.isDateEquals(date, dateMeta);\n\n            if (selected) {\n              break;\n            }\n          }\n\n          return selected;\n        } else if (this.isRangeSelection()) {\n          if (this.value[1]) return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);else return this.isDateEquals(this.value[0], dateMeta);\n        }\n      } else {\n        return false;\n      }\n    }\n\n    isMonthSelected(month) {\n      let day = this.value ? Array.isArray(this.value) ? this.value[0].getDate() : this.value.getDate() : 1;\n      return this.isSelected({\n        year: this.currentYear,\n        month: month,\n        day: day,\n        selectable: true\n      });\n    }\n\n    isDateEquals(value, dateMeta) {\n      if (value) return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;else return false;\n    }\n\n    isDateBetween(start, end, dateMeta) {\n      let between = false;\n\n      if (start && end) {\n        let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\n        return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\n      }\n\n      return between;\n    }\n\n    isSingleSelection() {\n      return this.selectionMode === 'single';\n    }\n\n    isRangeSelection() {\n      return this.selectionMode === 'range';\n    }\n\n    isMultipleSelection() {\n      return this.selectionMode === 'multiple';\n    }\n\n    isToday(today, day, month, year) {\n      return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\n    }\n\n    isSelectable(day, month, year, otherMonth) {\n      let validMin = true;\n      let validMax = true;\n      let validDate = true;\n      let validDay = true;\n\n      if (otherMonth && !this.selectOtherMonths) {\n        return false;\n      }\n\n      if (this.minDate) {\n        if (this.minDate.getFullYear() > year) {\n          validMin = false;\n        } else if (this.minDate.getFullYear() === year) {\n          if (this.minDate.getMonth() > month) {\n            validMin = false;\n          } else if (this.minDate.getMonth() === month) {\n            if (this.minDate.getDate() > day) {\n              validMin = false;\n            }\n          }\n        }\n      }\n\n      if (this.maxDate) {\n        if (this.maxDate.getFullYear() < year) {\n          validMax = false;\n        } else if (this.maxDate.getFullYear() === year) {\n          if (this.maxDate.getMonth() < month) {\n            validMax = false;\n          } else if (this.maxDate.getMonth() === month) {\n            if (this.maxDate.getDate() < day) {\n              validMax = false;\n            }\n          }\n        }\n      }\n\n      if (this.disabledDates) {\n        validDate = !this.isDateDisabled(day, month, year);\n      }\n\n      if (this.disabledDays) {\n        validDay = !this.isDayDisabled(day, month, year);\n      }\n\n      return validMin && validMax && validDate && validDay;\n    }\n\n    isDateDisabled(day, month, year) {\n      if (this.disabledDates) {\n        for (let disabledDate of this.disabledDates) {\n          if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    isDayDisabled(day, month, year) {\n      if (this.disabledDays) {\n        let weekday = new Date(year, month, day);\n        let weekdayNumber = weekday.getDay();\n        return this.disabledDays.indexOf(weekdayNumber) !== -1;\n      }\n\n      return false;\n    }\n\n    onInputFocus(event) {\n      this.focus = true;\n\n      if (this.showOnFocus) {\n        this.showOverlay();\n      }\n\n      this.onFocus.emit(event);\n    }\n\n    onInputClick() {\n      if (this.showOnFocus && !this.overlayVisible) {\n        this.showOverlay();\n      }\n    }\n\n    onInputBlur(event) {\n      this.focus = false;\n      this.onBlur.emit(event);\n\n      if (!this.keepInvalid) {\n        this.updateInputfield();\n      }\n\n      this.onModelTouched();\n    }\n\n    onButtonClick(event, inputfield) {\n      if (!this.overlayVisible) {\n        inputfield.focus();\n        this.showOverlay();\n      } else {\n        this.hideOverlay();\n      }\n    }\n\n    onOverlayClick(event) {\n      this.overlayService.add({\n        originalEvent: event,\n        target: this.el.nativeElement\n      });\n    }\n\n    onPrevButtonClick(event) {\n      this.navigationState = {\n        backward: true,\n        button: true\n      };\n      this.navBackward(event);\n    }\n\n    onNextButtonClick(event) {\n      this.navigationState = {\n        backward: false,\n        button: true\n      };\n      this.navForward(event);\n    }\n\n    onContainerButtonKeydown(event) {\n      switch (event.which) {\n        //tab\n        case 9:\n          if (!this.inline) {\n            this.trapFocus(event);\n          }\n\n          break;\n        //escape\n\n        case 27:\n          this.overlayVisible = false;\n          event.preventDefault();\n          break;\n\n        default:\n          //Noop\n          break;\n      }\n    }\n\n    onInputKeydown(event) {\n      this.isKeydown = true;\n\n      if (event.keyCode === 40 && this.contentViewChild) {\n        this.trapFocus(event);\n      } else if (event.keyCode === 27) {\n        if (this.overlayVisible) {\n          this.overlayVisible = false;\n          event.preventDefault();\n        }\n      } else if (event.keyCode === 13) {\n        if (this.overlayVisible) {\n          this.overlayVisible = false;\n          event.preventDefault();\n        }\n      } else if (event.keyCode === 9 && this.contentViewChild) {\n        DomHandler.getFocusableElements(this.contentViewChild.nativeElement).forEach(el => el.tabIndex = '-1');\n\n        if (this.overlayVisible) {\n          this.overlayVisible = false;\n        }\n      }\n    }\n\n    onDateCellKeydown(event, date, groupIndex) {\n      const cellContent = event.currentTarget;\n      const cell = cellContent.parentElement;\n\n      switch (event.which) {\n        //down arrow\n        case 40:\n          {\n            cellContent.tabIndex = '-1';\n            let cellIndex = DomHandler.index(cell);\n            let nextRow = cell.parentElement.nextElementSibling;\n\n            if (nextRow) {\n              let focusCell = nextRow.children[cellIndex].children[0];\n\n              if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                this.navigationState = {\n                  backward: false\n                };\n                this.navForward(event);\n              } else {\n                nextRow.children[cellIndex].children[0].tabIndex = '0';\n                nextRow.children[cellIndex].children[0].focus();\n              }\n            } else {\n              this.navigationState = {\n                backward: false\n              };\n              this.navForward(event);\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //up arrow\n\n        case 38:\n          {\n            cellContent.tabIndex = '-1';\n            let cellIndex = DomHandler.index(cell);\n            let prevRow = cell.parentElement.previousElementSibling;\n\n            if (prevRow) {\n              let focusCell = prevRow.children[cellIndex].children[0];\n\n              if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                this.navigationState = {\n                  backward: true\n                };\n                this.navBackward(event);\n              } else {\n                focusCell.tabIndex = '0';\n                focusCell.focus();\n              }\n            } else {\n              this.navigationState = {\n                backward: true\n              };\n              this.navBackward(event);\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //left arrow\n\n        case 37:\n          {\n            cellContent.tabIndex = '-1';\n            let prevCell = cell.previousElementSibling;\n\n            if (prevCell) {\n              let focusCell = prevCell.children[0];\n\n              if (DomHandler.hasClass(focusCell, 'p-disabled') || DomHandler.hasClass(focusCell.parentElement, 'p-datepicker-weeknumber')) {\n                this.navigateToMonth(true, groupIndex);\n              } else {\n                focusCell.tabIndex = '0';\n                focusCell.focus();\n              }\n            } else {\n              this.navigateToMonth(true, groupIndex);\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //right arrow\n\n        case 39:\n          {\n            cellContent.tabIndex = '-1';\n            let nextCell = cell.nextElementSibling;\n\n            if (nextCell) {\n              let focusCell = nextCell.children[0];\n\n              if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n                this.navigateToMonth(false, groupIndex);\n              } else {\n                focusCell.tabIndex = '0';\n                focusCell.focus();\n              }\n            } else {\n              this.navigateToMonth(false, groupIndex);\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //enter\n\n        case 13:\n          {\n            this.onDateSelect(event, date);\n            event.preventDefault();\n            break;\n          }\n        //escape\n\n        case 27:\n          {\n            this.overlayVisible = false;\n            event.preventDefault();\n            break;\n          }\n        //tab\n\n        case 9:\n          {\n            if (!this.inline) {\n              this.trapFocus(event);\n            }\n\n            break;\n          }\n\n        default:\n          //no op\n          break;\n      }\n    }\n\n    onMonthCellKeydown(event, index) {\n      const cell = event.currentTarget;\n\n      switch (event.which) {\n        //arrows\n        case 38:\n        case 40:\n          {\n            cell.tabIndex = '-1';\n            var cells = cell.parentElement.children;\n            var cellIndex = DomHandler.index(cell);\n            let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];\n\n            if (nextCell) {\n              nextCell.tabIndex = '0';\n              nextCell.focus();\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //left arrow\n\n        case 37:\n          {\n            cell.tabIndex = '-1';\n            let prevCell = cell.previousElementSibling;\n\n            if (prevCell) {\n              prevCell.tabIndex = '0';\n              prevCell.focus();\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //right arrow\n\n        case 39:\n          {\n            cell.tabIndex = '-1';\n            let nextCell = cell.nextElementSibling;\n\n            if (nextCell) {\n              nextCell.tabIndex = '0';\n              nextCell.focus();\n            }\n\n            event.preventDefault();\n            break;\n          }\n        //enter\n\n        case 13:\n          {\n            this.onMonthSelect(event, index);\n            event.preventDefault();\n            break;\n          }\n        //escape\n\n        case 27:\n          {\n            this.overlayVisible = false;\n            event.preventDefault();\n            break;\n          }\n        //tab\n\n        case 9:\n          {\n            if (!this.inline) {\n              this.trapFocus(event);\n            }\n\n            break;\n          }\n\n        default:\n          //no op\n          break;\n      }\n    }\n\n    navigateToMonth(prev, groupIndex) {\n      if (prev) {\n        if (this.numberOfMonths === 1 || groupIndex === 0) {\n          this.navigationState = {\n            backward: true\n          };\n          this.navBackward(event);\n        } else {\n          let prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];\n          let cells = DomHandler.find(prevMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n          let focusCell = cells[cells.length - 1];\n          focusCell.tabIndex = '0';\n          focusCell.focus();\n        }\n      } else {\n        if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {\n          this.navigationState = {\n            backward: false\n          };\n          this.navForward(event);\n        } else {\n          let nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];\n          let focusCell = DomHandler.findSingle(nextMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n          focusCell.tabIndex = '0';\n          focusCell.focus();\n        }\n      }\n    }\n\n    updateFocus() {\n      let cell;\n\n      if (this.navigationState) {\n        if (this.navigationState.button) {\n          this.initFocusableCell();\n          if (this.navigationState.backward) DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-prev').focus();else DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-next').focus();\n        } else {\n          if (this.navigationState.backward) {\n            let cells = DomHandler.find(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n            cell = cells[cells.length - 1];\n          } else {\n            cell = DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n          }\n\n          if (cell) {\n            cell.tabIndex = '0';\n            cell.focus();\n          }\n        }\n\n        this.navigationState = null;\n      } else {\n        this.initFocusableCell();\n      }\n    }\n\n    initFocusableCell() {\n      let cell;\n\n      if (this.view === 'month') {\n        let cells = DomHandler.find(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)');\n        let selectedCell = DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month.p-highlight');\n        cells.forEach(cell => cell.tabIndex = -1);\n        cell = selectedCell || cells[0];\n\n        if (cells.length === 0) {\n          let disabledCells = DomHandler.find(this.contentViewChild.nativeElement, '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = \"0\"]');\n          disabledCells.forEach(cell => cell.tabIndex = -1);\n        }\n      } else {\n        cell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'span.p-highlight');\n\n        if (!cell) {\n          let todayCell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)');\n          if (todayCell) cell = todayCell;else cell = DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)');\n        }\n      }\n\n      if (cell) {\n        cell.tabIndex = '0';\n      }\n    }\n\n    trapFocus(event) {\n      let focusableElements = DomHandler.getFocusableElements(this.contentViewChild.nativeElement);\n\n      if (focusableElements && focusableElements.length > 0) {\n        if (!focusableElements[0].ownerDocument.activeElement) {\n          focusableElements[0].focus();\n        } else {\n          let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n          if (event.shiftKey) {\n            if (focusedIndex == -1 || focusedIndex === 0) {\n              if (this.focusTrap) {\n                focusableElements[focusableElements.length - 1].focus();\n              } else {\n                if (focusedIndex === -1) return this.hideOverlay();else if (focusedIndex === 0) return;\n              }\n            } else {\n              focusableElements[focusedIndex - 1].focus();\n            }\n          } else {\n            if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) {\n              if (!this.focusTrap && focusedIndex != -1) return this.hideOverlay();else focusableElements[0].focus();\n            } else {\n              focusableElements[focusedIndex + 1].focus();\n            }\n          }\n        }\n      }\n\n      event.preventDefault();\n    }\n\n    onMonthDropdownChange(m) {\n      this.currentMonth = parseInt(m);\n      this.onMonthChange.emit({\n        month: this.currentMonth + 1,\n        year: this.currentYear\n      });\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n\n    onYearDropdownChange(y) {\n      this.currentYear = parseInt(y);\n      this.onYearChange.emit({\n        month: this.currentMonth + 1,\n        year: this.currentYear\n      });\n      this.createMonths(this.currentMonth, this.currentYear);\n    }\n\n    validateTime(hour, minute, second, pm) {\n      let value = this.value;\n      const convertedHour = this.convertTo24Hour(hour, pm);\n\n      if (this.isRangeSelection()) {\n        value = this.value[1] || this.value[0];\n      }\n\n      if (this.isMultipleSelection()) {\n        value = this.value[this.value.length - 1];\n      }\n\n      const valueDateString = value ? value.toDateString() : null;\n\n      if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n        if (this.minDate.getHours() > convertedHour) {\n          return false;\n        }\n\n        if (this.minDate.getHours() === convertedHour) {\n          if (this.minDate.getMinutes() > minute) {\n            return false;\n          }\n\n          if (this.minDate.getMinutes() === minute) {\n            if (this.minDate.getSeconds() > second) {\n              return false;\n            }\n          }\n        }\n      }\n\n      if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n        if (this.maxDate.getHours() < convertedHour) {\n          return false;\n        }\n\n        if (this.maxDate.getHours() === convertedHour) {\n          if (this.maxDate.getMinutes() < minute) {\n            return false;\n          }\n\n          if (this.maxDate.getMinutes() === minute) {\n            if (this.maxDate.getSeconds() < second) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    }\n\n    incrementHour(event) {\n      const prevHour = this.currentHour;\n      let newHour = this.currentHour + this.stepHour;\n      let newPM = this.pm;\n      if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;else if (this.hourFormat == '12') {\n        // Before the AM/PM break, now after\n        if (prevHour < 12 && newHour > 11) {\n          newPM = !this.pm;\n        }\n\n        newHour = newHour >= 13 ? newHour - 12 : newHour;\n      }\n\n      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n        this.currentHour = newHour;\n        this.pm = newPM;\n      }\n\n      event.preventDefault();\n    }\n\n    onTimePickerElementMouseDown(event, type, direction) {\n      if (!this.disabled) {\n        this.repeat(event, null, type, direction);\n        event.preventDefault();\n      }\n    }\n\n    onTimePickerElementMouseUp(event) {\n      if (!this.disabled) {\n        this.clearTimePickerTimer();\n        this.updateTime();\n      }\n    }\n\n    onTimePickerElementMouseLeave() {\n      if (!this.disabled && this.timePickerTimer) {\n        this.clearTimePickerTimer();\n        this.updateTime();\n      }\n    }\n\n    repeat(event, interval, type, direction) {\n      let i = interval || 500;\n      this.clearTimePickerTimer();\n      this.timePickerTimer = setTimeout(() => {\n        this.repeat(event, 100, type, direction);\n        this.cd.markForCheck();\n      }, i);\n\n      switch (type) {\n        case 0:\n          if (direction === 1) this.incrementHour(event);else this.decrementHour(event);\n          break;\n\n        case 1:\n          if (direction === 1) this.incrementMinute(event);else this.decrementMinute(event);\n          break;\n\n        case 2:\n          if (direction === 1) this.incrementSecond(event);else this.decrementSecond(event);\n          break;\n      }\n\n      this.updateInputfield();\n    }\n\n    clearTimePickerTimer() {\n      if (this.timePickerTimer) {\n        clearTimeout(this.timePickerTimer);\n        this.timePickerTimer = null;\n      }\n    }\n\n    decrementHour(event) {\n      let newHour = this.currentHour - this.stepHour;\n      let newPM = this.pm;\n      if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;else if (this.hourFormat == '12') {\n        // If we were at noon/midnight, then switch\n        if (this.currentHour === 12) {\n          newPM = !this.pm;\n        }\n\n        newHour = newHour <= 0 ? 12 + newHour : newHour;\n      }\n\n      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n        this.currentHour = newHour;\n        this.pm = newPM;\n      }\n\n      event.preventDefault();\n    }\n\n    incrementMinute(event) {\n      let newMinute = this.currentMinute + this.stepMinute;\n      newMinute = newMinute > 59 ? newMinute - 60 : newMinute;\n\n      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n        this.currentMinute = newMinute;\n      }\n\n      event.preventDefault();\n    }\n\n    decrementMinute(event) {\n      let newMinute = this.currentMinute - this.stepMinute;\n      newMinute = newMinute < 0 ? 60 + newMinute : newMinute;\n\n      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\n        this.currentMinute = newMinute;\n      }\n\n      event.preventDefault();\n    }\n\n    incrementSecond(event) {\n      let newSecond = this.currentSecond + this.stepSecond;\n      newSecond = newSecond > 59 ? newSecond - 60 : newSecond;\n\n      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n        this.currentSecond = newSecond;\n      }\n\n      event.preventDefault();\n    }\n\n    decrementSecond(event) {\n      let newSecond = this.currentSecond - this.stepSecond;\n      newSecond = newSecond < 0 ? 60 + newSecond : newSecond;\n\n      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\n        this.currentSecond = newSecond;\n      }\n\n      event.preventDefault();\n    }\n\n    updateTime() {\n      let value = this.value;\n\n      if (this.isRangeSelection()) {\n        value = this.value[1] || this.value[0];\n      }\n\n      if (this.isMultipleSelection()) {\n        value = this.value[this.value.length - 1];\n      }\n\n      value = value ? new Date(value.getTime()) : new Date();\n\n      if (this.hourFormat == '12') {\n        if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\n      } else {\n        value.setHours(this.currentHour);\n      }\n\n      value.setMinutes(this.currentMinute);\n      value.setSeconds(this.currentSecond);\n\n      if (this.isRangeSelection()) {\n        if (this.value[1]) value = [this.value[0], value];else value = [value, null];\n      }\n\n      if (this.isMultipleSelection()) {\n        value = [...this.value.slice(0, -1), value];\n      }\n\n      this.updateModel(value);\n      this.onSelect.emit(value);\n      this.updateInputfield();\n    }\n\n    toggleAMPM(event) {\n      const newPM = !this.pm;\n\n      if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {\n        this.pm = newPM;\n        this.updateTime();\n      }\n\n      event.preventDefault();\n    }\n\n    onUserInput(event) {\n      // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n      if (!this.isKeydown) {\n        return;\n      }\n\n      this.isKeydown = false;\n      let val = event.target.value;\n\n      try {\n        let value = this.parseValueFromString(val);\n\n        if (this.isValidSelection(value)) {\n          this.updateModel(value);\n          this.updateUI();\n        }\n      } catch (err) {\n        //invalid date\n        this.updateModel(null);\n      }\n\n      this.filled = val != null && val.length;\n      this.onInput.emit(event);\n    }\n\n    isValidSelection(value) {\n      let isValid = true;\n\n      if (this.isSingleSelection()) {\n        if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n          isValid = false;\n        }\n      } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n        if (this.isRangeSelection()) {\n          isValid = value.length > 1 && value[1] > value[0] ? true : false;\n        }\n      }\n\n      return isValid;\n    }\n\n    parseValueFromString(text) {\n      if (!text || text.trim().length === 0) {\n        return null;\n      }\n\n      let value;\n\n      if (this.isSingleSelection()) {\n        value = this.parseDateTime(text);\n      } else if (this.isMultipleSelection()) {\n        let tokens = text.split(this.multipleSeparator);\n        value = [];\n\n        for (let token of tokens) {\n          value.push(this.parseDateTime(token.trim()));\n        }\n      } else if (this.isRangeSelection()) {\n        let tokens = text.split(' ' + this.rangeSeparator + ' ');\n        value = [];\n\n        for (let i = 0; i < tokens.length; i++) {\n          value[i] = this.parseDateTime(tokens[i].trim());\n        }\n      }\n\n      return value;\n    }\n\n    parseDateTime(text) {\n      let date;\n      let parts = text.split(' ');\n\n      if (this.timeOnly) {\n        date = new Date();\n        this.populateTime(date, parts[0], parts[1]);\n      } else {\n        const dateFormat = this.getDateFormat();\n\n        if (this.showTime) {\n          let ampm = this.hourFormat == '12' ? parts.pop() : null;\n          let timeString = parts.pop();\n          date = this.parseDate(parts.join(' '), dateFormat);\n          this.populateTime(date, timeString, ampm);\n        } else {\n          date = this.parseDate(text, dateFormat);\n        }\n      }\n\n      return date;\n    }\n\n    populateTime(value, timeString, ampm) {\n      if (this.hourFormat == '12' && !ampm) {\n        throw 'Invalid Time';\n      }\n\n      this.pm = ampm === 'PM' || ampm === 'pm';\n      let time = this.parseTime(timeString);\n      value.setHours(time.hour);\n      value.setMinutes(time.minute);\n      value.setSeconds(time.second);\n    }\n\n    updateUI() {\n      let val = this.value || this.defaultDate || new Date();\n\n      if (Array.isArray(val)) {\n        val = val[0];\n      }\n\n      this.currentMonth = val.getMonth();\n      this.currentYear = val.getFullYear();\n      this.createMonths(this.currentMonth, this.currentYear);\n\n      if (this.showTime || this.timeOnly) {\n        this.setCurrentHourPM(val.getHours());\n        this.currentMinute = val.getMinutes();\n        this.currentSecond = val.getSeconds();\n      }\n    }\n\n    showOverlay() {\n      if (!this.overlayVisible) {\n        this.updateUI();\n        this.overlayVisible = true;\n      }\n    }\n\n    hideOverlay() {\n      this.overlayVisible = false;\n      this.clearTimePickerTimer();\n\n      if (this.touchUI) {\n        this.disableModality();\n      }\n\n      this.cd.markForCheck();\n    }\n\n    toggle() {\n      if (!this.inline) {\n        if (!this.overlayVisible) {\n          this.showOverlay();\n          this.inputfieldViewChild.nativeElement.focus();\n        } else {\n          this.hideOverlay();\n        }\n      }\n    }\n\n    onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n        case 'visibleTouchUI':\n          if (!this.inline) {\n            this.overlay = event.element;\n            this.appendOverlay();\n\n            if (this.autoZIndex) {\n              if (this.touchUI) ZIndexUtils.set('modal', this.overlay, this.baseZIndex || this.config.zIndex.modal);else ZIndexUtils.set('overlay', this.overlay, this.baseZIndex || this.config.zIndex.overlay);\n            }\n\n            this.alignOverlay();\n            this.onShow.emit(event);\n          }\n\n          break;\n\n        case 'void':\n          this.onOverlayHide();\n          this.onClose.emit(event);\n          break;\n      }\n    }\n\n    onOverlayAnimationDone(event) {\n      switch (event.toState) {\n        case 'visible':\n        case 'visibleTouchUI':\n          if (!this.inline) {\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n            this.bindScrollListener();\n          }\n\n          break;\n\n        case 'void':\n          if (this.autoZIndex) {\n            ZIndexUtils.clear(event.element);\n          }\n\n          break;\n      }\n    }\n\n    appendOverlay() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n      }\n    }\n\n    restoreOverlayAppend() {\n      if (this.overlay && this.appendTo) {\n        this.el.nativeElement.appendChild(this.overlay);\n      }\n    }\n\n    alignOverlay() {\n      if (this.touchUI) {\n        this.enableModality(this.overlay);\n      } else {\n        if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);else DomHandler.relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);\n      }\n    }\n\n    enableModality(element) {\n      if (!this.mask) {\n        this.mask = document.createElement('div');\n        this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);\n        let maskStyleClass = 'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter';\n        DomHandler.addMultipleClasses(this.mask, maskStyleClass);\n        this.maskClickListener = this.renderer.listen(this.mask, 'click', event => {\n          this.disableModality();\n        });\n        document.body.appendChild(this.mask);\n        DomHandler.addClass(document.body, 'p-overflow-hidden');\n      }\n    }\n\n    disableModality() {\n      if (this.mask) {\n        DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n        this.animationEndListener = this.destroyMask.bind(this);\n        this.mask.addEventListener('animationend', this.animationEndListener);\n      }\n    }\n\n    destroyMask() {\n      document.body.removeChild(this.mask);\n      let bodyChildren = document.body.children;\n      let hasBlockerMasks;\n\n      for (let i = 0; i < bodyChildren.length; i++) {\n        let bodyChild = bodyChildren[i];\n\n        if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n          hasBlockerMasks = true;\n          break;\n        }\n      }\n\n      if (!hasBlockerMasks) {\n        DomHandler.removeClass(document.body, 'p-overflow-hidden');\n      }\n\n      this.unbindAnimationEndListener();\n      this.unbindMaskClickListener();\n      this.mask = null;\n    }\n\n    unbindMaskClickListener() {\n      if (this.maskClickListener) {\n        this.maskClickListener();\n        this.maskClickListener = null;\n      }\n    }\n\n    unbindAnimationEndListener() {\n      if (this.animationEndListener && this.mask) {\n        this.mask.removeEventListener('animationend', this.animationEndListener);\n        this.animationEndListener = null;\n      }\n    }\n\n    writeValue(value) {\n      this.value = value;\n\n      if (this.value && typeof this.value === 'string') {\n        this.value = this.parseValueFromString(this.value);\n      }\n\n      this.updateInputfield();\n      this.updateUI();\n      this.cd.markForCheck();\n    }\n\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n\n    getDateFormat() {\n      return this.dateFormat || this.getTranslation('dateFormat');\n    } // Ported from jquery-ui datepicker formatDate\n\n\n    formatDate(date, format) {\n      if (!date) {\n        return '';\n      }\n\n      let iFormat;\n\n      const lookAhead = match => {\n        const matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\n\n        if (matches) {\n          iFormat++;\n        }\n\n        return matches;\n      },\n            formatNumber = (match, value, len) => {\n        let num = '' + value;\n\n        if (lookAhead(match)) {\n          while (num.length < len) {\n            num = '0' + num;\n          }\n        }\n\n        return num;\n      },\n            formatName = (match, value, shortNames, longNames) => {\n        return lookAhead(match) ? longNames[value] : shortNames[value];\n      };\n\n      let output = '';\n      let literal = false;\n\n      if (date) {\n        for (iFormat = 0; iFormat < format.length; iFormat++) {\n          if (literal) {\n            if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n              literal = false;\n            } else {\n              output += format.charAt(iFormat);\n            }\n          } else {\n            switch (format.charAt(iFormat)) {\n              case 'd':\n                output += formatNumber('d', date.getDate(), 2);\n                break;\n\n              case 'D':\n                output += formatName('D', date.getDay(), this.getTranslation(TranslationKeys.DAY_NAMES_SHORT), this.getTranslation(TranslationKeys.DAY_NAMES));\n                break;\n\n              case 'o':\n                output += formatNumber('o', Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n                break;\n\n              case 'm':\n                output += formatNumber('m', date.getMonth() + 1, 2);\n                break;\n\n              case 'M':\n                output += formatName('M', date.getMonth(), this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT), this.getTranslation(TranslationKeys.MONTH_NAMES));\n                break;\n\n              case 'y':\n                output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + date.getFullYear() % 100;\n                break;\n\n              case '@':\n                output += date.getTime();\n                break;\n\n              case '!':\n                output += date.getTime() * 10000 + this.ticksTo1970;\n                break;\n\n              case '\\'':\n                if (lookAhead('\\'')) {\n                  output += '\\'';\n                } else {\n                  literal = true;\n                }\n\n                break;\n\n              default:\n                output += format.charAt(iFormat);\n            }\n          }\n        }\n      }\n\n      return output;\n    }\n\n    formatTime(date) {\n      if (!date) {\n        return '';\n      }\n\n      let output = '';\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let seconds = date.getSeconds();\n\n      if (this.hourFormat == '12' && hours > 11 && hours != 12) {\n        hours -= 12;\n      }\n\n      if (this.hourFormat == '12') {\n        output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;\n      } else {\n        output += hours < 10 ? '0' + hours : hours;\n      }\n\n      output += ':';\n      output += minutes < 10 ? '0' + minutes : minutes;\n\n      if (this.showSeconds) {\n        output += ':';\n        output += seconds < 10 ? '0' + seconds : seconds;\n      }\n\n      if (this.hourFormat == '12') {\n        output += date.getHours() > 11 ? ' PM' : ' AM';\n      }\n\n      return output;\n    }\n\n    parseTime(value) {\n      let tokens = value.split(':');\n      let validTokenLength = this.showSeconds ? 3 : 2;\n\n      if (tokens.length !== validTokenLength) {\n        throw \"Invalid time\";\n      }\n\n      let h = parseInt(tokens[0]);\n      let m = parseInt(tokens[1]);\n      let s = this.showSeconds ? parseInt(tokens[2]) : null;\n\n      if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || this.hourFormat == '12' && h > 12 || this.showSeconds && (isNaN(s) || s > 59)) {\n        throw \"Invalid time\";\n      } else {\n        if (this.hourFormat == '12') {\n          if (h !== 12 && this.pm) {\n            h += 12;\n          } else if (!this.pm && h === 12) {\n            h -= 12;\n          }\n        }\n\n        return {\n          hour: h,\n          minute: m,\n          second: s\n        };\n      }\n    } // Ported from jquery-ui datepicker parseDate\n\n\n    parseDate(value, format) {\n      if (format == null || value == null) {\n        throw \"Invalid arguments\";\n      }\n\n      value = typeof value === \"object\" ? value.toString() : value + \"\";\n\n      if (value === \"\") {\n        return null;\n      }\n\n      let iFormat,\n          dim,\n          extra,\n          iValue = 0,\n          shortYearCutoff = typeof this.shortYearCutoff !== \"string\" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10),\n          year = -1,\n          month = -1,\n          day = -1,\n          doy = -1,\n          literal = false,\n          date,\n          lookAhead = match => {\n        let matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\n\n        if (matches) {\n          iFormat++;\n        }\n\n        return matches;\n      },\n          getNumber = match => {\n        let isDoubled = lookAhead(match),\n            size = match === \"@\" ? 14 : match === \"!\" ? 20 : match === \"y\" && isDoubled ? 4 : match === \"o\" ? 3 : 2,\n            minSize = match === \"y\" ? size : 1,\n            digits = new RegExp(\"^\\\\d{\" + minSize + \",\" + size + \"}\"),\n            num = value.substring(iValue).match(digits);\n\n        if (!num) {\n          throw \"Missing number at position \" + iValue;\n        }\n\n        iValue += num[0].length;\n        return parseInt(num[0], 10);\n      },\n          getName = (match, shortNames, longNames) => {\n        let index = -1;\n        let arr = lookAhead(match) ? longNames : shortNames;\n        let names = [];\n\n        for (let i = 0; i < arr.length; i++) {\n          names.push([i, arr[i]]);\n        }\n\n        names.sort((a, b) => {\n          return -(a[1].length - b[1].length);\n        });\n\n        for (let i = 0; i < names.length; i++) {\n          let name = names[i][1];\n\n          if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n            index = names[i][0];\n            iValue += name.length;\n            break;\n          }\n        }\n\n        if (index !== -1) {\n          return index + 1;\n        } else {\n          throw \"Unknown name at position \" + iValue;\n        }\n      },\n          checkLiteral = () => {\n        if (value.charAt(iValue) !== format.charAt(iFormat)) {\n          throw \"Unexpected literal at position \" + iValue;\n        }\n\n        iValue++;\n      };\n\n      if (this.view === 'month') {\n        day = 1;\n      }\n\n      for (iFormat = 0; iFormat < format.length; iFormat++) {\n        if (literal) {\n          if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\n            literal = false;\n          } else {\n            checkLiteral();\n          }\n        } else {\n          switch (format.charAt(iFormat)) {\n            case \"d\":\n              day = getNumber(\"d\");\n              break;\n\n            case \"D\":\n              getName(\"D\", this.getTranslation(TranslationKeys.DAY_NAMES_SHORT), this.getTranslation(TranslationKeys.DAY_NAMES));\n              break;\n\n            case \"o\":\n              doy = getNumber(\"o\");\n              break;\n\n            case \"m\":\n              month = getNumber(\"m\");\n              break;\n\n            case \"M\":\n              month = getName(\"M\", this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT), this.getTranslation(TranslationKeys.MONTH_NAMES));\n              break;\n\n            case \"y\":\n              year = getNumber(\"y\");\n              break;\n\n            case \"@\":\n              date = new Date(getNumber(\"@\"));\n              year = date.getFullYear();\n              month = date.getMonth() + 1;\n              day = date.getDate();\n              break;\n\n            case \"!\":\n              date = new Date((getNumber(\"!\") - this.ticksTo1970) / 10000);\n              year = date.getFullYear();\n              month = date.getMonth() + 1;\n              day = date.getDate();\n              break;\n\n            case \"'\":\n              if (lookAhead(\"'\")) {\n                checkLiteral();\n              } else {\n                literal = true;\n              }\n\n              break;\n\n            default:\n              checkLiteral();\n          }\n        }\n      }\n\n      if (iValue < value.length) {\n        extra = value.substr(iValue);\n\n        if (!/^\\s+/.test(extra)) {\n          throw \"Extra/unparsed characters found in date: \" + extra;\n        }\n      }\n\n      if (year === -1) {\n        year = new Date().getFullYear();\n      } else if (year < 100) {\n        year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);\n      }\n\n      if (doy > -1) {\n        month = 1;\n        day = doy;\n\n        do {\n          dim = this.getDaysCountInMonth(year, month - 1);\n\n          if (day <= dim) {\n            break;\n          }\n\n          month++;\n          day -= dim;\n        } while (true);\n      }\n\n      date = this.daylightSavingAdjust(new Date(year, month - 1, day));\n\n      if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n        throw \"Invalid date\"; // E.g. 31/02/00\n      }\n\n      return date;\n    }\n\n    daylightSavingAdjust(date) {\n      if (!date) {\n        return null;\n      }\n\n      date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n      return date;\n    }\n\n    updateFilledState() {\n      this.filled = this.inputFieldValue && this.inputFieldValue != '';\n    }\n\n    onTodayButtonClick(event) {\n      let date = new Date();\n      let dateMeta = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n        otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\n        today: true,\n        selectable: true\n      };\n      this.onDateSelect(event, dateMeta);\n      this.onTodayClick.emit(event);\n    }\n\n    onClearButtonClick(event) {\n      this.updateModel(null);\n      this.updateInputfield();\n      this.hideOverlay();\n      this.onClearClick.emit(event);\n    }\n\n    bindDocumentClickListener() {\n      if (!this.documentClickListener) {\n        this.zone.runOutsideAngular(() => {\n          const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n          this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n            if (this.isOutsideClicked(event) && this.overlayVisible) {\n              this.zone.run(() => {\n                this.hideOverlay();\n                this.onClickOutside.emit(event);\n                this.cd.markForCheck();\n              });\n            }\n          });\n        });\n      }\n    }\n\n    unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n\n    bindDocumentResizeListener() {\n      if (!this.documentResizeListener && !this.touchUI) {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }\n\n    unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n          if (this.overlayVisible) {\n            this.hideOverlay();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n\n    isOutsideClicked(event) {\n      return !(this.el.nativeElement.isSameNode(event.target) || this.isNavIconClicked(event) || this.el.nativeElement.contains(event.target) || this.overlay && this.overlay.contains(event.target));\n    }\n\n    isNavIconClicked(event) {\n      return DomHandler.hasClass(event.target, 'p-datepicker-prev') || DomHandler.hasClass(event.target, 'p-datepicker-prev-icon') || DomHandler.hasClass(event.target, 'p-datepicker-next') || DomHandler.hasClass(event.target, 'p-datepicker-next-icon');\n    }\n\n    onWindowResize() {\n      if (this.overlayVisible && !DomHandler.isAndroid()) {\n        this.hideOverlay();\n      }\n    }\n\n    onOverlayHide() {\n      if (this.mask) {\n        this.destroyMask();\n      }\n\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.overlay = null;\n    }\n\n    ngOnDestroy() {\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.translationSubscription) {\n        this.translationSubscription.unsubscribe();\n      }\n\n      if (this.overlay && this.autoZIndex) {\n        ZIndexUtils.clear(this.overlay);\n      }\n\n      this.clearTimePickerTimer();\n      this.restoreOverlayAppend();\n      this.onOverlayHide();\n    }\n\n  }\n\n  Calendar.ɵfac = function Calendar_Factory(t) {\n    return new (t || Calendar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n  };\n\n  Calendar.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Calendar,\n    selectors: [[\"p-calendar\"]],\n    contentQueries: function Calendar_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Calendar_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputfieldViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 4,\n    hostBindings: function Calendar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus);\n      }\n    },\n    inputs: {\n      style: \"style\",\n      styleClass: \"styleClass\",\n      inputStyle: \"inputStyle\",\n      inputId: \"inputId\",\n      name: \"name\",\n      inputStyleClass: \"inputStyleClass\",\n      placeholder: \"placeholder\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      iconAriaLabel: \"iconAriaLabel\",\n      disabled: \"disabled\",\n      dateFormat: \"dateFormat\",\n      multipleSeparator: \"multipleSeparator\",\n      rangeSeparator: \"rangeSeparator\",\n      inline: \"inline\",\n      showOtherMonths: \"showOtherMonths\",\n      selectOtherMonths: \"selectOtherMonths\",\n      showIcon: \"showIcon\",\n      icon: \"icon\",\n      appendTo: \"appendTo\",\n      readonlyInput: \"readonlyInput\",\n      shortYearCutoff: \"shortYearCutoff\",\n      monthNavigator: \"monthNavigator\",\n      yearNavigator: \"yearNavigator\",\n      hourFormat: \"hourFormat\",\n      timeOnly: \"timeOnly\",\n      stepHour: \"stepHour\",\n      stepMinute: \"stepMinute\",\n      stepSecond: \"stepSecond\",\n      showSeconds: \"showSeconds\",\n      required: \"required\",\n      showOnFocus: \"showOnFocus\",\n      showWeek: \"showWeek\",\n      dataType: \"dataType\",\n      selectionMode: \"selectionMode\",\n      maxDateCount: \"maxDateCount\",\n      showButtonBar: \"showButtonBar\",\n      todayButtonStyleClass: \"todayButtonStyleClass\",\n      clearButtonStyleClass: \"clearButtonStyleClass\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      panelStyleClass: \"panelStyleClass\",\n      panelStyle: \"panelStyle\",\n      keepInvalid: \"keepInvalid\",\n      hideOnDateTimeSelect: \"hideOnDateTimeSelect\",\n      numberOfMonths: \"numberOfMonths\",\n      view: \"view\",\n      touchUI: \"touchUI\",\n      timeSeparator: \"timeSeparator\",\n      focusTrap: \"focusTrap\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      tabindex: \"tabindex\",\n      defaultDate: \"defaultDate\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      disabledDates: \"disabledDates\",\n      disabledDays: \"disabledDays\",\n      yearRange: \"yearRange\",\n      showTime: \"showTime\",\n      locale: \"locale\"\n    },\n    outputs: {\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onClose: \"onClose\",\n      onSelect: \"onSelect\",\n      onInput: \"onInput\",\n      onTodayClick: \"onTodayClick\",\n      onClearClick: \"onClearClick\",\n      onMonthChange: \"onMonthChange\",\n      onYearChange: \"onYearChange\",\n      onClickOutside: \"onClickOutside\",\n      onShow: \"onShow\"\n    },\n    features: [i0.ɵɵProvidersFeature([CALENDAR_VALUE_ACCESSOR])],\n    ngContentSelectors: _c13,\n    decls: 4,\n    vars: 11,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [3, \"ngIf\"], [3, \"class\", \"ngStyle\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"autocomplete\", \"off\", 3, \"value\", \"readonly\", \"ngStyle\", \"placeholder\", \"disabled\", \"ngClass\", \"focus\", \"keydown\", \"click\", \"blur\", \"input\"], [\"inputfield\", \"\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"class\", \"p-datepicker-trigger\", \"tabindex\", \"0\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"tabindex\", \"0\", 1, \"p-datepicker-trigger\", 3, \"icon\", \"disabled\", \"click\"], [3, \"ngStyle\", \"ngClass\", \"click\"], [\"contentWrapper\", \"\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"class\", \"p-timepicker\", 4, \"ngIf\"], [\"class\", \"p-datepicker-buttonbar\", 4, \"ngIf\"], [1, \"p-datepicker-group-container\"], [\"class\", \"p-datepicker-group\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-monthpicker\", 4, \"ngIf\"], [1, \"p-datepicker-group\"], [1, \"p-datepicker-header\"], [\"class\", \"p-datepicker-prev p-link\", \"type\", \"button\", \"pRipple\", \"\", 3, \"keydown\", \"click\", 4, \"ngIf\"], [1, \"p-datepicker-title\"], [\"class\", \"p-datepicker-month\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"class\", \"p-datepicker-month\", 3, \"change\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"class\", \"p-datepicker-year\", 3, \"change\", 4, \"ngIf\"], [\"class\", \"p-datepicker-year\", 4, \"ngIf\"], [\"class\", \"p-datepicker-next p-link\", \"type\", \"button\", \"pRipple\", \"\", 3, \"keydown\", \"click\", 4, \"ngIf\"], [\"class\", \"p-datepicker-calendar-container\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-datepicker-prev\", \"p-link\", 3, \"keydown\", \"click\"], [1, \"p-datepicker-prev-icon\", \"pi\", \"pi-chevron-left\"], [1, \"p-datepicker-month\"], [\"tabindex\", \"0\", 1, \"p-datepicker-month\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"], [\"tabindex\", \"0\", 1, \"p-datepicker-year\", 3, \"change\"], [1, \"p-datepicker-year\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-datepicker-next\", \"p-link\", 3, \"keydown\", \"click\"], [1, \"p-datepicker-next-icon\", \"pi\", \"pi-chevron-right\"], [1, \"p-datepicker-calendar-container\"], [1, \"p-datepicker-calendar\"], [\"class\", \"p-datepicker-weekheader p-disabled\", 4, \"ngIf\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-datepicker-weekheader\", \"p-disabled\"], [\"scope\", \"col\"], [\"class\", \"p-datepicker-weeknumber\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-datepicker-weeknumber\"], [1, \"p-disabled\"], [3, \"ngClass\"], [\"draggable\", \"false\", \"pRipple\", \"\", 3, \"ngClass\", \"click\", \"keydown\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-monthpicker\"], [\"class\", \"p-monthpicker-month\", \"pRipple\", \"\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [\"pRipple\", \"\", 1, \"p-monthpicker-month\", 3, \"ngClass\", \"click\", \"keydown\"], [1, \"p-timepicker\"], [1, \"p-hour-picker\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-link\", 3, \"keydown\", \"keydown.enter\", \"mousedown\", \"mouseup\", \"mouseleave\"], [1, \"pi\", \"pi-chevron-up\"], [1, \"pi\", \"pi-chevron-down\"], [1, \"p-separator\"], [1, \"p-minute-picker\"], [\"class\", \"p-separator\", 4, \"ngIf\"], [\"class\", \"p-second-picker\", 4, \"ngIf\"], [\"class\", \"p-ampm-picker\", 4, \"ngIf\"], [1, \"p-second-picker\"], [1, \"p-ampm-picker\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-link\", 3, \"keydown\", \"click\", \"keydown.enter\"], [1, \"p-datepicker-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"ngClass\", \"keydown\", \"click\"]],\n    template: function Calendar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c11);\n        i0.ɵɵelementStart(0, \"span\", 0, 1);\n        i0.ɵɵtemplate(2, Calendar_ng_template_2_Template, 3, 16, \"ng-template\", 2);\n        i0.ɵɵtemplate(3, Calendar_div_3_Template, 9, 28, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(6, _c12, ctx.showIcon, ctx.timeOnly, ctx.disabled, ctx.focus))(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.inline);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inline || ctx.overlayVisible);\n      }\n    },\n    directives: [i2.NgClass, i2.NgStyle, i2.NgIf, i3.ButtonDirective, i4.Ripple, i2.NgTemplateOutlet, i2.NgForOf],\n    styles: [\".p-calendar{position:relative;display:inline-flex}.p-calendar .p-inputtext{flex:1 1 auto;width:1%}.p-calendar-w-btn .p-inputtext{border-top-right-radius:0;border-bottom-right-radius:0}.p-calendar-w-btn .p-datepicker-trigger{border-top-left-radius:0;border-bottom-left-radius:0}.p-fluid .p-calendar{display:flex}.p-fluid .p-calendar .p-inputtext{width:1%}.p-calendar .p-datepicker{min-width:100%}.p-datepicker{width:auto;position:absolute;top:0;left:0}.p-datepicker-inline{position:static}.p-datepicker-header{display:flex;align-items:center;justify-content:space-between}.p-datepicker-header .p-datepicker-title{margin:0 auto}.p-datepicker-next,.p-datepicker-prev{cursor:pointer;display:inline-flex;justify-content:center;align-items:center;overflow:hidden;position:relative}.p-datepicker-multiple-month .p-datepicker-group-container{display:flex}.p-datepicker table{width:100%;border-collapse:collapse}.p-datepicker td>span{display:flex;margin:0 auto}.p-datepicker td>span,.p-monthpicker-month{justify-content:center;align-items:center;cursor:pointer;overflow:hidden;position:relative}.p-monthpicker-month{width:33.3%;display:inline-flex}.p-datepicker-buttonbar{display:flex;justify-content:space-between;align-items:center}.p-timepicker,.p-timepicker button{display:flex;justify-content:center;align-items:center}.p-timepicker button{cursor:pointer;overflow:hidden;position:relative}.p-timepicker>div{display:flex;align-items:center;flex-direction:column}.p-calendar .p-datepicker-touch-ui,.p-datepicker-touch-ui{position:fixed;top:50%;left:50%;min-width:80vw;transform:translate(-50%,-50%)}\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayAnimation', [state('visibleTouchUI', style({\n        transform: 'translate(-50%,-50%)',\n        opacity: 1\n      })), transition('void => visible', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}', style({\n        opacity: 1,\n        transform: '*'\n      }))]), transition('visible => void', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))]), transition('void => visibleTouchUI', [style({\n        opacity: 0,\n        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'\n      }), animate('{{showTransitionParams}}')]), transition('visibleTouchUI => void', [animate('{{hideTransitionParams}}', style({\n        opacity: 0,\n        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return Calendar;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CalendarModule = /*#__PURE__*/(() => {\n  class CalendarModule {}\n\n  CalendarModule.ɵfac = function CalendarModule_Factory(t) {\n    return new (t || CalendarModule)();\n  };\n\n  CalendarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CalendarModule\n  });\n  CalendarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, SharedModule, RippleModule], ButtonModule, SharedModule]\n  });\n  return CalendarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CALENDAR_VALUE_ACCESSOR, Calendar, CalendarModule }; //# sourceMappingURL=primeng-calendar.js.map","map":null,"metadata":{},"sourceType":"module"}