{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, Input, Output, ChangeDetectionStrategy, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, Footer, Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i1 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\nfunction MultiSelectItem_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\n\nfunction MultiSelectItem_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nconst _c2 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nconst _c3 = function (a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nconst _c4 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c5 = [\"container\"];\nconst _c6 = [\"filterInput\"];\nconst _c7 = [\"in\"];\n\nfunction MultiSelect_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.valuesAsString || \"empty\");\n  }\n}\n\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_container_7_ng_container_2_div_1_span_4_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const item_r9 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return ctx_r13.removeChip(item_r9, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13, 14);\n    i0.ɵɵelementStart(2, \"span\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MultiSelect_ng_container_7_ng_container_2_div_1_span_4_Template, 1, 0, \"span\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r7.findLabelByValue(item_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.disabled);\n  }\n}\n\nfunction MultiSelect_ng_container_7_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.placeholder || ctx_r8.defaultLabel || \"empty\");\n  }\n}\n\nfunction MultiSelect_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_2_div_1_Template, 5, 2, \"div\", 12);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_7_ng_container_2_ng_container_2_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.value || ctx_r6.value.length === 0);\n  }\n}\n\nfunction MultiSelect_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_7_ng_container_2_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.display === \"comma\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.display === \"chip\");\n  }\n}\n\nfunction MultiSelect_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MultiSelect_div_11_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    \"p-checkbox-disabled\": a0\n  };\n};\n\nconst _c9 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-focus\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nfunction MultiSelect_div_11_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"input\", 31);\n    i0.ɵɵlistener(\"focus\", function MultiSelect_div_11_div_1_div_3_Template_input_focus_2_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(3);\n      return ctx_r25.onHeaderCheckboxFocus();\n    })(\"blur\", function MultiSelect_div_11_div_1_div_3_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext(3);\n      return ctx_r27.onHeaderCheckboxBlur();\n    })(\"keydown.space\", function MultiSelect_div_11_div_1_div_3_Template_input_keydown_space_2_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext(3);\n      return ctx_r28.toggleAll($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function MultiSelect_div_11_div_1_div_3_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext(3);\n      return ctx_r29.toggleAll($event);\n    });\n    i0.ɵɵelement(4, \"span\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c8, ctx_r23.disabled || ctx_r23.toggleAllDisabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r23.allChecked);\n    i0.ɵɵattribute(\"disabled\", ctx_r23.disabled || ctx_r23.toggleAllDisabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c9, ctx_r23.allChecked, ctx_r23.headerCheckboxFocus, ctx_r23.disabled || ctx_r23.toggleAllDisabled));\n    i0.ɵɵattribute(\"aria-checked\", ctx_r23.allChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c3, ctx_r23.allChecked));\n  }\n}\n\nfunction MultiSelect_div_11_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"input\", 35, 36);\n    i0.ɵɵlistener(\"input\", function MultiSelect_div_11_div_1_div_4_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(3);\n      return ctx_r31.onFilterInputChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 37);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r24.filterValue || \"\")(\"disabled\", ctx_r24.disabled);\n    i0.ɵɵattribute(\"placeholder\", ctx_r24.filterPlaceHolder)(\"aria-label\", ctx_r24.ariaFilterLabel);\n  }\n}\n\nfunction MultiSelect_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 25);\n    i0.ɵɵtemplate(3, MultiSelect_div_11_div_1_div_3_Template, 5, 14, \"div\", 26);\n    i0.ɵɵtemplate(4, MultiSelect_div_11_div_1_div_4_Template, 4, 4, \"div\", 27);\n    i0.ɵɵelementStart(5, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function MultiSelect_div_11_div_1_Template_button_click_5_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.close($event);\n    });\n    i0.ɵɵelement(6, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.showToggleAll && !ctx_r16.selectionLimit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.filter);\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_4_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r36 = i0.ɵɵnextContext().$implicit;\n    const ctx_r37 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r37.getOptionGroupLabel(optgroup_r36) || \"empty\");\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_4_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_4_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 39);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_container_4_ng_template_1_span_1_Template, 2, 1, \"span\", 7);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_ng_container_4_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MultiSelect_div_11_ng_container_4_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 8);\n  }\n\n  if (rf & 2) {\n    const optgroup_r36 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r19 = i0.ɵɵreference(7);\n\n    const ctx_r35 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r35.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r35.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c4, optgroup_r36));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r19)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c4, ctx_r35.getOptionGroupChildren(optgroup_r36)));\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_container_4_ng_template_1_Template, 4, 9, \"ng-template\", 38);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r17.optionsToRender);\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MultiSelect_div_11_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r19 = i0.ɵɵreference(7);\n\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r19)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c4, ctx_r18.optionsToRender));\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r53 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-multiSelectItem\", 43);\n    i0.ɵɵlistener(\"onClick\", function MultiSelect_div_11_ng_template_6_ng_container_0_ng_template_1_Template_p_multiSelectItem_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r53);\n      const ctx_r52 = i0.ɵɵnextContext(4);\n      return ctx_r52.onOptionClick($event);\n    })(\"onKeydown\", function MultiSelect_div_11_ng_template_6_ng_container_0_ng_template_1_Template_p_multiSelectItem_onKeydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r53);\n      const ctx_r54 = i0.ɵɵnextContext(4);\n      return ctx_r54.onOptionKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r50 = ctx.$implicit;\n    const ctx_r49 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"option\", option_r50)(\"selected\", ctx_r49.isSelected(option_r50))(\"label\", ctx_r49.getOptionLabel(option_r50))(\"disabled\", ctx_r49.isOptionDisabled(option_r50))(\"template\", ctx_r49.itemTemplate);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_template_6_ng_container_0_ng_template_1_Template, 1, 5, \"ng-template\", 38);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const optionsToDisplay_r42 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", optionsToDisplay_r42);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r67 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p-multiSelectItem\", 48);\n    i0.ɵɵlistener(\"onClick\", function MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template_p_multiSelectItem_onClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const ctx_r66 = i0.ɵɵnextContext(5);\n      return ctx_r66.onOptionClick($event);\n    })(\"onKeydown\", function MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template_p_multiSelectItem_onKeydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r67);\n      const ctx_r68 = i0.ɵɵnextContext(5);\n      return ctx_r68.onOptionKeydown($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const option_r59 = ctx.$implicit;\n    const ctx_r58 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"option\", option_r59)(\"selected\", ctx_r58.isSelected(option_r59))(\"label\", ctx_r58.getOptionLabel(option_r59))(\"disabled\", ctx_r58.isOptionDisabled(option_r59))(\"template\", ctx_r58.itemTemplate)(\"itemSize\", ctx_r58.itemSize);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 45, 46);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_2_Template, 2, 6, \"ng-container\", 47);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optionsToDisplay_r42 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r56 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r56.scrollHeight))(\"itemSize\", ctx_r56.itemSize);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", optionsToDisplay_r42);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_div_11_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template, 3, 5, \"cdk-virtual-scroll-viewport\", 44);\n  }\n\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r46.virtualScroll && !ctx_r46.emptyOptions);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r70 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r70.emptyFilterMessageLabel, \" \");\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 50);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 49);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_template_6_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 40);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_ng_template_6_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r47.emptyFilterTemplate && !ctx_r47.emptyTemplate)(\"ngIfElse\", ctx_r47.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r47.emptyFilterTemplate || ctx_r47.emptyTemplate);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r73 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r73.emptyMessageLabel, \" \");\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 51);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 49);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_template_6_li_4_ng_container_1_Template, 2, 1, \"ng-container\", 40);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_ng_template_6_li_4_ng_container_2_Template, 2, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r48.emptyTemplate)(\"ngIfElse\", ctx_r48.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r48.emptyTemplate);\n  }\n}\n\nfunction MultiSelect_div_11_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_div_11_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 40);\n    i0.ɵɵtemplate(1, MultiSelect_div_11_ng_template_6_ng_template_1_Template, 1, 1, \"ng-template\", null, 41, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, MultiSelect_div_11_ng_template_6_li_3_Template, 3, 3, \"li\", 42);\n    i0.ɵɵtemplate(4, MultiSelect_div_11_ng_template_6_li_4_Template, 3, 3, \"li\", 42);\n  }\n\n  if (rf & 2) {\n    const _r45 = i0.ɵɵreference(2);\n\n    const ctx_r20 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r20.virtualScroll)(\"ngIfElse\", _r45);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r20.hasFilter() && ctx_r20.emptyOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r20.hasFilter() && ctx_r20.emptyOptions);\n  }\n}\n\nfunction MultiSelect_div_11_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction MultiSelect_div_11_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MultiSelect_div_11_div_8_ng_container_2_Template, 1, 0, \"ng-container\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.footerTemplate);\n  }\n}\n\nconst _c10 = function () {\n  return [\"p-multiselect-panel p-component\"];\n};\n\nconst _c11 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c12 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c13 = function (a0) {\n  return {\n    \"p-multiselect-virtualscroll\": a0\n  };\n};\n\nfunction MultiSelect_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r78 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵlistener(\"@overlayAnimation.start\", function MultiSelect_div_11_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r77 = i0.ɵɵnextContext();\n      return ctx_r77.onOverlayAnimationStart($event);\n    })(\"@overlayAnimation.done\", function MultiSelect_div_11_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return ctx_r79.onOverlayAnimationEnd($event);\n    })(\"keydown\", function MultiSelect_div_11_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r80 = i0.ɵɵnextContext();\n      return ctx_r80.onKeydown($event);\n    })(\"click\", function MultiSelect_div_11_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r81 = i0.ɵɵnextContext();\n      return ctx_r81.onOverlayClick($event);\n    });\n    i0.ɵɵtemplate(1, MultiSelect_div_11_div_1_Template, 7, 3, \"div\", 19);\n    i0.ɵɵelementStart(2, \"div\", 20);\n    i0.ɵɵelementStart(3, \"ul\", 21);\n    i0.ɵɵtemplate(4, MultiSelect_div_11_ng_container_4_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(5, MultiSelect_div_11_ng_container_5_Template, 2, 4, \"ng-container\", 7);\n    i0.ɵɵtemplate(6, MultiSelect_div_11_ng_template_6_Template, 5, 4, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, MultiSelect_div_11_div_8_Template, 3, 1, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(12, _c10))(\"@overlayAnimation\", i0.ɵɵpureFunction1(16, _c12, i0.ɵɵpureFunction2(13, _c11, ctx_r4.showTransitionOptions, ctx_r4.hideTransitionOptions)))(\"ngStyle\", ctx_r4.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r4.virtualScroll ? \"auto\" : ctx_r4.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c13, ctx_r4.virtualScroll));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.footerFacet || ctx_r4.footerTemplate);\n  }\n}\n\nconst _c14 = [[[\"p-header\"]], [[\"p-footer\"]]];\n\nconst _c15 = function (a1, a2, a3, a4) {\n  return {\n    \"p-multiselect p-component\": true,\n    \"p-multiselect-open\": a1,\n    \"p-multiselect-chip\": a2,\n    \"p-focus\": a3,\n    \"p-disabled\": a4\n  };\n};\n\nconst _c16 = function (a0, a1) {\n  return {\n    \"p-placeholder\": a0,\n    \"p-multiselect-label-empty\": a1\n  };\n};\n\nconst _c17 = function () {\n  return {\n    \"p-multiselect-trigger\": true\n  };\n};\n\nconst _c18 = [\"p-header\", \"p-footer\"];\nconst MULTISELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelect),\n  multi: true\n};\nlet MultiSelectItem = /*#__PURE__*/(() => {\n  class MultiSelectItem {\n    constructor() {\n      this.onClick = new EventEmitter();\n      this.onKeydown = new EventEmitter();\n    }\n\n    onOptionClick(event) {\n      this.onClick.emit({\n        originalEvent: event,\n        option: this.option\n      });\n    }\n\n    onOptionKeydown(event) {\n      this.onKeydown.emit({\n        originalEvent: event,\n        option: this.option\n      });\n    }\n\n  }\n\n  MultiSelectItem.ɵfac = function MultiSelectItem_Factory(t) {\n    return new (t || MultiSelectItem)();\n  };\n\n  MultiSelectItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MultiSelectItem,\n    selectors: [[\"p-multiSelectItem\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      option: \"option\",\n      selected: \"selected\",\n      label: \"label\",\n      disabled: \"disabled\",\n      itemSize: \"itemSize\",\n      template: \"template\"\n    },\n    outputs: {\n      onClick: \"onClick\",\n      onKeydown: \"onKeydown\"\n    },\n    decls: 6,\n    vars: 20,\n    consts: [[\"pRipple\", \"\", 1, \"p-multiselect-item\", 3, \"ngStyle\", \"ngClass\", \"click\", \"keydown\"], [1, \"p-checkbox\", \"p-component\"], [1, \"p-checkbox-box\", 3, \"ngClass\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function MultiSelectItem_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"li\", 0);\n        i0.ɵɵlistener(\"click\", function MultiSelectItem_Template_li_click_0_listener($event) {\n          return ctx.onOptionClick($event);\n        })(\"keydown\", function MultiSelectItem_Template_li_keydown_0_listener($event) {\n          return ctx.onOptionKeydown($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"span\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MultiSelectItem_span_4_Template, 2, 1, \"span\", 4);\n        i0.ɵɵtemplate(5, MultiSelectItem_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(9, _c0, ctx.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, ctx.selected, ctx.disabled));\n        i0.ɵɵattribute(\"aria-label\", ctx.label)(\"tabindex\", ctx.disabled ? null : \"0\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c2, ctx.selected));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c3, ctx.selected));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.template);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(18, _c4, ctx.option));\n      }\n    },\n    directives: [i1.Ripple, i2.NgStyle, i2.NgClass, i2.NgIf, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return MultiSelectItem;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MultiSelect = /*#__PURE__*/(() => {\n  class MultiSelect {\n    constructor(el, renderer, cd, filterService, config, overlayService) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.filterService = filterService;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.filter = true;\n      this.displaySelectedLabel = true;\n      this.maxSelectedLabels = 3;\n      this.selectedItemsLabel = 'ellipsis';\n      this.showToggleAll = true;\n      this.emptyFilterMessage = '';\n      this.emptyMessage = '';\n      this.resetFilterOnHide = false;\n      this.dropdownIcon = 'pi pi-chevron-down';\n      this.optionGroupChildren = \"items\";\n      this.showHeader = true;\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n      this.hideTransitionOptions = '.1s linear';\n      this.filterMatchMode = \"contains\";\n      this.tooltip = '';\n      this.tooltipPosition = 'right';\n      this.tooltipPositionStyle = 'absolute';\n      this.autofocusFilter = true;\n      this.display = 'comma';\n      this.onChange = new EventEmitter();\n      this.onFilter = new EventEmitter();\n      this.onFocus = new EventEmitter();\n      this.onBlur = new EventEmitter();\n      this.onClick = new EventEmitter();\n      this.onPanelShow = new EventEmitter();\n      this.onPanelHide = new EventEmitter();\n      this.scrollHeight = '200px';\n\n      this.onModelChange = () => {};\n\n      this.onModelTouched = () => {};\n    }\n\n    set defaultLabel(val) {\n      this._defaultLabel = val;\n      this.updateLabel();\n    }\n\n    get defaultLabel() {\n      return this._defaultLabel;\n    }\n\n    set placeholder(val) {\n      this._placeholder = val;\n      this.updateLabel();\n    }\n\n    get placeholder() {\n      return this._placeholder;\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(val) {\n      this._options = val;\n      this.updateLabel();\n    }\n\n    get filterValue() {\n      return this._filterValue;\n    }\n\n    set filterValue(val) {\n      this._filterValue = val;\n      this.activateFilter();\n    }\n\n    ngOnInit() {\n      this.updateLabel();\n    }\n\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n\n          case 'group':\n            this.groupTemplate = item.template;\n            break;\n\n          case 'selectedItems':\n            this.selectedItemsTemplate = item.template;\n            break;\n\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n\n          case 'emptyfilter':\n            this.emptyFilterTemplate = item.template;\n            break;\n\n          case 'empty':\n            this.emptyTemplate = item.template;\n            break;\n\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n\n    ngAfterViewInit() {\n      if (this.overlayVisible) {\n        this.show();\n      }\n    }\n\n    ngAfterViewChecked() {\n      if (this.filtered) {\n        this.alignOverlay();\n        this.filtered = false;\n      }\n    }\n\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n    }\n\n    getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n\n    getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n\n    isOptionDisabled(option) {\n      let disabled = this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n      return disabled || this.maxSelectionLimitReached && !this.isSelected(option);\n    }\n\n    writeValue(value) {\n      this.value = value;\n      this.updateLabel();\n      this.updateFilledState();\n      this.checkSelectionLimit();\n      this.cd.markForCheck();\n    }\n\n    checkSelectionLimit() {\n      if (this.selectionLimit && this.value && this.value.length === this.selectionLimit) {\n        this.maxSelectionLimitReached = true;\n      } else {\n        this.maxSelectionLimitReached = false;\n      }\n    }\n\n    updateFilledState() {\n      this.filled = this.value && this.value.length > 0;\n    }\n\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n\n    onOptionClick(event) {\n      let option = event.option;\n\n      if (this.isOptionDisabled(option)) {\n        return;\n      }\n\n      let optionValue = this.getOptionValue(option);\n      let selectionIndex = this.findSelectionIndex(optionValue);\n\n      if (selectionIndex != -1) {\n        this.value = this.value.filter((val, i) => i != selectionIndex);\n\n        if (this.selectionLimit) {\n          this.maxSelectionLimitReached = false;\n        }\n      } else {\n        if (!this.selectionLimit || !this.value || this.value.length < this.selectionLimit) {\n          this.value = [...(this.value || []), optionValue];\n        }\n\n        this.checkSelectionLimit();\n      }\n\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event.originalEvent,\n        value: this.value,\n        itemValue: optionValue\n      });\n      this.updateLabel();\n      this.updateFilledState();\n    }\n\n    isSelected(option) {\n      return this.findSelectionIndex(this.getOptionValue(option)) != -1;\n    }\n\n    findSelectionIndex(val) {\n      let index = -1;\n\n      if (this.value) {\n        for (let i = 0; i < this.value.length; i++) {\n          if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n\n    get toggleAllDisabled() {\n      let optionsToRender = this.optionsToRender;\n\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return true;\n      } else {\n        for (let option of optionsToRender) {\n          if (!this.isOptionDisabled(option)) return false;\n        }\n\n        return true;\n      }\n    }\n\n    toggleAll(event) {\n      if (this.disabled || this.toggleAllDisabled || this.readonly) {\n        return;\n      }\n\n      let allChecked = this.allChecked;\n      if (allChecked) this.uncheckAll();else this.checkAll();\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n      this.updateFilledState();\n      this.updateLabel();\n      event.preventDefault();\n    }\n\n    checkAll() {\n      let optionsToRender = this.optionsToRender;\n      let val = [];\n      optionsToRender.forEach(opt => {\n        if (!this.group) {\n          let optionDisabled = this.isOptionDisabled(opt);\n\n          if (!optionDisabled || optionDisabled && this.isSelected(opt)) {\n            val.push(this.getOptionValue(opt));\n          }\n        } else {\n          let subOptions = this.getOptionGroupChildren(opt);\n\n          if (subOptions) {\n            subOptions.forEach(option => {\n              let optionDisabled = this.isOptionDisabled(option);\n\n              if (!optionDisabled || optionDisabled && this.isSelected(option)) {\n                val.push(this.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n\n    uncheckAll() {\n      let optionsToRender = this.optionsToRender;\n      let val = [];\n      optionsToRender.forEach(opt => {\n        if (!this.group) {\n          let optionDisabled = this.isOptionDisabled(opt);\n\n          if (optionDisabled && this.isSelected(opt)) {\n            val.push(this.getOptionValue(opt));\n          }\n        } else {\n          if (opt.items) {\n            opt.items.forEach(option => {\n              let optionDisabled = this.isOptionDisabled(option);\n\n              if (optionDisabled && this.isSelected(option)) {\n                val.push(this.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n\n    show() {\n      if (!this.overlayVisible) {\n        this.overlayVisible = true;\n      }\n    }\n\n    onOverlayClick(event) {\n      this.overlayService.add({\n        originalEvent: event,\n        target: this.el.nativeElement\n      });\n    }\n\n    onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.overlay = event.element;\n          this.appendOverlay();\n\n          if (this.autoZIndex) {\n            ZIndexUtils.set('overlay', this.overlay, this.config.zIndex.overlay);\n          }\n\n          this.alignOverlay();\n          this.bindDocumentClickListener();\n          this.bindDocumentResizeListener();\n          this.bindScrollListener();\n\n          if (this.filterInputChild && this.filterInputChild.nativeElement) {\n            this.preventModelTouched = true;\n\n            if (this.autofocusFilter) {\n              this.filterInputChild.nativeElement.focus();\n            }\n          }\n\n          this.onPanelShow.emit();\n          break;\n\n        case 'void':\n          this.onOverlayHide();\n          break;\n      }\n    }\n\n    onOverlayAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          ZIndexUtils.clear(event.element);\n          break;\n      }\n    }\n\n    appendOverlay() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n        if (!this.overlay.style.minWidth) {\n          this.overlay.style.minWidth = DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n        }\n      }\n    }\n\n    restoreOverlayAppend() {\n      if (this.overlay && this.appendTo) {\n        this.el.nativeElement.appendChild(this.overlay);\n      }\n    }\n\n    alignOverlay() {\n      if (this.overlay) {\n        if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);else DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n      }\n    }\n\n    hide() {\n      this.overlayVisible = false;\n      this.unbindDocumentClickListener();\n\n      if (this.resetFilterOnHide) {\n        this.filterInputChild.nativeElement.value = '';\n        this._filterValue = null;\n        this._filteredOptions = null;\n      }\n\n      this.onPanelHide.emit();\n      this.cd.markForCheck();\n    }\n\n    close(event) {\n      this.hide();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    onMouseclick(event, input) {\n      if (this.disabled || this.readonly || event.target.isSameNode(this.accessibleViewChild.nativeElement)) {\n        return;\n      }\n\n      this.onClick.emit(event);\n\n      if (!this.isOverlayClick(event) && !DomHandler.hasClass(event.target, 'p-multiselect-token-icon')) {\n        if (this.overlayVisible) {\n          this.hide();\n        } else {\n          input.focus();\n          this.show();\n        }\n      }\n    }\n\n    removeChip(chip, event) {\n      this.value = this.value.filter(val => !ObjectUtils.equals(val, chip, this.dataKey));\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n      this.updateLabel();\n      this.updateFilledState();\n    }\n\n    isOverlayClick(event) {\n      let targetNode = event.target;\n      return this.overlay ? this.overlay.isSameNode(targetNode) || this.overlay.contains(targetNode) : false;\n    }\n\n    isOutsideClicked(event) {\n      return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || this.isOverlayClick(event));\n    }\n\n    onInputFocus(event) {\n      this.focus = true;\n      this.onFocus.emit({\n        originalEvent: event\n      });\n    }\n\n    onInputBlur(event) {\n      this.focus = false;\n      this.onBlur.emit({\n        originalEvent: event\n      });\n\n      if (!this.preventModelTouched) {\n        this.onModelTouched();\n      }\n\n      this.preventModelTouched = false;\n    }\n\n    onOptionKeydown(event) {\n      if (this.readonly) {\n        return;\n      }\n\n      switch (event.originalEvent.which) {\n        //down\n        case 40:\n          var nextItem = this.findNextItem(event.originalEvent.target.parentElement);\n\n          if (nextItem) {\n            nextItem.focus();\n          }\n\n          event.originalEvent.preventDefault();\n          break;\n        //up\n\n        case 38:\n          var prevItem = this.findPrevItem(event.originalEvent.target.parentElement);\n\n          if (prevItem) {\n            prevItem.focus();\n          }\n\n          event.originalEvent.preventDefault();\n          break;\n        //enter\n\n        case 13:\n          this.onOptionClick(event);\n          event.originalEvent.preventDefault();\n          break;\n      }\n    }\n\n    findNextItem(item) {\n      let nextItem = item.nextElementSibling;\n      if (nextItem) return DomHandler.hasClass(nextItem.children[0], 'p-disabled') || DomHandler.isHidden(nextItem.children[0]) || DomHandler.hasClass(nextItem, 'p-multiselect-item-group') ? this.findNextItem(nextItem) : nextItem.children[0];else return null;\n    }\n\n    findPrevItem(item) {\n      let prevItem = item.previousElementSibling;\n      if (prevItem) return DomHandler.hasClass(prevItem.children[0], 'p-disabled') || DomHandler.isHidden(prevItem.children[0]) || DomHandler.hasClass(prevItem, 'p-multiselect-item-group') ? this.findPrevItem(prevItem) : prevItem.children[0];else return null;\n    }\n\n    onKeydown(event) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (!this.overlayVisible && event.altKey) {\n            this.show();\n            event.preventDefault();\n          }\n\n          break;\n        //space\n\n        case 32:\n          if (!this.overlayVisible) {\n            this.show();\n            event.preventDefault();\n          }\n\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          break;\n      }\n    }\n\n    updateLabel() {\n      if (this.value && this.options && this.value.length && this.displaySelectedLabel) {\n        let label = '';\n\n        for (let i = 0; i < this.value.length; i++) {\n          let itemLabel = this.findLabelByValue(this.value[i]);\n\n          if (itemLabel) {\n            if (label.length > 0) {\n              label = label + ', ';\n            }\n\n            label = label + itemLabel;\n          }\n        }\n\n        if (this.value.length <= this.maxSelectedLabels || this.selectedItemsLabel === 'ellipsis') {\n          this.valuesAsString = label;\n        } else {\n          let pattern = /{(.*?)}/;\n\n          if (pattern.test(this.selectedItemsLabel)) {\n            this.valuesAsString = this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.value.length + '');\n          } else {\n            this.valuesAsString = this.selectedItemsLabel;\n          }\n        }\n      } else {\n        this.valuesAsString = this.placeholder || this.defaultLabel;\n      }\n    }\n\n    findLabelByValue(val) {\n      if (this.group) {\n        let label = null;\n\n        for (let i = 0; i < this.options.length; i++) {\n          let subOptions = this.getOptionGroupChildren(this.options[i]);\n\n          if (subOptions) {\n            label = this.searchLabelByValue(val, subOptions);\n\n            if (label) {\n              break;\n            }\n          }\n        }\n\n        return label;\n      } else {\n        return this.searchLabelByValue(val, this.options);\n      }\n    }\n\n    searchLabelByValue(val, options) {\n      let label = null;\n\n      for (let i = 0; i < options.length; i++) {\n        let option = options[i];\n        let optionValue = this.getOptionValue(option);\n\n        if (val == null && optionValue == null || ObjectUtils.equals(val, optionValue, this.dataKey)) {\n          label = this.getOptionLabel(option);\n          break;\n        }\n      }\n\n      return label;\n    }\n\n    get allChecked() {\n      let optionsToRender = this.optionsToRender;\n\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return false;\n      } else {\n        let selectedDisabledItemsLength = 0;\n        let unselectedDisabledItemsLength = 0;\n        let selectedEnabledItemsLength = 0;\n        let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n\n        for (let option of optionsToRender) {\n          if (!this.group) {\n            let disabled = this.isOptionDisabled(option);\n            let selected = this.isSelected(option);\n\n            if (disabled) {\n              if (selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n            } else {\n              if (selected) selectedEnabledItemsLength++;else return false;\n            }\n          } else {\n            for (let opt of this.getOptionGroupChildren(option)) {\n              let disabled = this.isOptionDisabled(opt);\n              let selected = this.isSelected(opt);\n\n              if (disabled) {\n                if (selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n              } else {\n                if (selected) selectedEnabledItemsLength++;else {\n                  return false;\n                }\n              }\n\n              visibleOptionsLength++;\n            }\n          }\n        }\n\n        return visibleOptionsLength === selectedDisabledItemsLength || visibleOptionsLength === selectedEnabledItemsLength || selectedEnabledItemsLength && visibleOptionsLength === selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength;\n      }\n    }\n\n    get optionsToRender() {\n      return this._filteredOptions || this.options;\n    }\n\n    get emptyOptions() {\n      let optionsToRender = this.optionsToRender;\n      return !optionsToRender || optionsToRender.length === 0;\n    }\n\n    get emptyMessageLabel() {\n      return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n\n    get emptyFilterMessageLabel() {\n      return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n\n    hasFilter() {\n      return this._filterValue && this._filterValue.trim().length > 0;\n    }\n\n    onFilterInputChange(event) {\n      this._filterValue = event.target.value;\n      this.activateFilter();\n      this.onFilter.emit({\n        originalEvent: event,\n        filter: this._filterValue\n      });\n      this.cd.detectChanges();\n      this.alignOverlay();\n    }\n\n    activateFilter() {\n      if (this.hasFilter() && this._options) {\n        let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n\n        if (this.group) {\n          let searchFields = (this.optionLabel || 'label').split(',');\n          let filteredGroups = [];\n\n          for (let optgroup of this.options) {\n            let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n            if (filteredSubOptions && filteredSubOptions.length) {\n              filteredGroups.push(Object.assign(Object.assign({}, optgroup), {\n                [this.optionGroupChildren]: filteredSubOptions\n              }));\n            }\n          }\n\n          this._filteredOptions = filteredGroups;\n        } else {\n          this._filteredOptions = this.filterService.filter(this.options, searchFields, this._filterValue, this.filterMatchMode, this.filterLocale);\n        }\n      } else {\n        this._filteredOptions = null;\n      }\n    }\n\n    onHeaderCheckboxFocus() {\n      this.headerCheckboxFocus = true;\n    }\n\n    onHeaderCheckboxBlur() {\n      this.headerCheckboxFocus = false;\n    }\n\n    bindDocumentClickListener() {\n      if (!this.documentClickListener) {\n        const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n          if (this.isOutsideClicked(event)) {\n            this.hide();\n          }\n        });\n      }\n    }\n\n    unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n\n    bindDocumentResizeListener() {\n      this.documentResizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n\n    onWindowResize() {\n      if (!DomHandler.isAndroid()) {\n        this.hide();\n      }\n    }\n\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n          if (this.overlayVisible) {\n            this.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n\n    onOverlayHide() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.overlay = null;\n      this.onModelTouched();\n    }\n\n    ngOnDestroy() {\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n\n      if (this.overlay) {\n        ZIndexUtils.clear(this.overlay);\n      }\n\n      this.restoreOverlayAppend();\n      this.onOverlayHide();\n    }\n\n  }\n\n  MultiSelect.ɵfac = function MultiSelect_Factory(t) {\n    return new (t || MultiSelect)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.OverlayService));\n  };\n\n  MultiSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MultiSelect,\n    selectors: [[\"p-multiSelect\"]],\n    contentQueries: function MultiSelect_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Footer, 5);\n        i0.ɵɵcontentQuery(dirIndex, Header, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerFacet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerFacet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function MultiSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterInputChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 4,\n    hostBindings: function MultiSelect_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus || ctx.overlayVisible);\n      }\n    },\n    inputs: {\n      style: \"style\",\n      styleClass: \"styleClass\",\n      panelStyle: \"panelStyle\",\n      panelStyleClass: \"panelStyleClass\",\n      inputId: \"inputId\",\n      disabled: \"disabled\",\n      readonly: \"readonly\",\n      group: \"group\",\n      filter: \"filter\",\n      filterPlaceHolder: \"filterPlaceHolder\",\n      filterLocale: \"filterLocale\",\n      overlayVisible: \"overlayVisible\",\n      tabindex: \"tabindex\",\n      appendTo: \"appendTo\",\n      dataKey: \"dataKey\",\n      name: \"name\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      displaySelectedLabel: \"displaySelectedLabel\",\n      maxSelectedLabels: \"maxSelectedLabels\",\n      selectionLimit: \"selectionLimit\",\n      selectedItemsLabel: \"selectedItemsLabel\",\n      showToggleAll: \"showToggleAll\",\n      emptyFilterMessage: \"emptyFilterMessage\",\n      emptyMessage: \"emptyMessage\",\n      resetFilterOnHide: \"resetFilterOnHide\",\n      dropdownIcon: \"dropdownIcon\",\n      optionLabel: \"optionLabel\",\n      optionValue: \"optionValue\",\n      optionDisabled: \"optionDisabled\",\n      optionGroupLabel: \"optionGroupLabel\",\n      optionGroupChildren: \"optionGroupChildren\",\n      showHeader: \"showHeader\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      filterBy: \"filterBy\",\n      virtualScroll: \"virtualScroll\",\n      itemSize: \"itemSize\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      ariaFilterLabel: \"ariaFilterLabel\",\n      filterMatchMode: \"filterMatchMode\",\n      tooltip: \"tooltip\",\n      tooltipPosition: \"tooltipPosition\",\n      tooltipPositionStyle: \"tooltipPositionStyle\",\n      tooltipStyleClass: \"tooltipStyleClass\",\n      autofocusFilter: \"autofocusFilter\",\n      display: \"display\",\n      scrollHeight: \"scrollHeight\",\n      defaultLabel: \"defaultLabel\",\n      placeholder: \"placeholder\",\n      options: \"options\",\n      filterValue: \"filterValue\"\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onFilter: \"onFilter\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onClick: \"onClick\",\n      onPanelShow: \"onPanelShow\",\n      onPanelHide: \"onPanelHide\"\n    },\n    features: [i0.ɵɵProvidersFeature([MULTISELECT_VALUE_ACCESSOR])],\n    ngContentSelectors: _c18,\n    decls: 12,\n    vars: 32,\n    consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"readonly\", \"aria-haspopup\", \"listbox\", \"role\", \"listbox\", 3, \"disabled\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [1, \"p-multiselect-label-container\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [1, \"p-multiselect-label\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [1, \"p-multiselect-trigger-icon\", 3, \"ngClass\"], [\"onOverlayAnimationEnd\", \"\", 3, \"ngClass\", \"ngStyle\", \"class\", \"keydown\", \"click\", 4, \"ngIf\"], [\"class\", \"p-multiselect-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-multiselect-token\"], [\"token\", \"\"], [1, \"p-multiselect-token-label\"], [\"class\", \"p-multiselect-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-multiselect-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [\"onOverlayAnimationEnd\", \"\", 3, \"ngClass\", \"ngStyle\", \"keydown\", \"click\"], [\"class\", \"p-multiselect-header\", 4, \"ngIf\"], [1, \"p-multiselect-items-wrapper\"], [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"p-multiselect-items\", \"p-component\", 3, \"ngClass\"], [\"itemslist\", \"\"], [\"class\", \"p-multiselect-footer\", 4, \"ngIf\"], [1, \"p-multiselect-header\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-checkbox p-component\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-multiselect-filter-container\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-multiselect-close\", \"p-link\", 3, \"click\"], [1, \"p-multiselect-close-icon\", \"pi\", \"pi-times\"], [1, \"p-checkbox\", \"p-component\", 3, \"ngClass\"], [\"type\", \"checkbox\", \"readonly\", \"readonly\", 3, \"checked\", \"focus\", \"blur\", \"keydown.space\"], [\"role\", \"checkbox\", 1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [1, \"p-multiselect-filter-container\"], [\"type\", \"text\", \"role\", \"textbox\", 1, \"p-multiselect-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"disabled\", \"input\"], [\"filterInput\", \"\"], [1, \"p-multiselect-filter-icon\", \"pi\", \"pi-search\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-multiselect-item-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollList\", \"\"], [\"class\", \"p-multiselect-empty-message\", 4, \"ngIf\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"onClick\", \"onKeydown\"], [3, \"ngStyle\", \"itemSize\", 4, \"ngIf\"], [3, \"ngStyle\", \"itemSize\"], [\"viewport\", \"\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"itemSize\", \"onClick\", \"onKeydown\"], [1, \"p-multiselect-empty-message\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"], [1, \"p-multiselect-footer\"]],\n    template: function MultiSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r82 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵprojectionDef(_c14);\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"click\", function MultiSelect_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r82);\n\n          const _r1 = i0.ɵɵreference(4);\n\n          return ctx.onMouseclick($event, _r1);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"input\", 3, 4);\n        i0.ɵɵlistener(\"focus\", function MultiSelect_Template_input_focus_3_listener($event) {\n          return ctx.onInputFocus($event);\n        })(\"blur\", function MultiSelect_Template_input_blur_3_listener($event) {\n          return ctx.onInputBlur($event);\n        })(\"keydown\", function MultiSelect_Template_input_keydown_3_listener($event) {\n          return ctx.onKeydown($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtemplate(7, MultiSelect_ng_container_7_Template, 3, 2, \"ng-container\", 7);\n        i0.ɵɵtemplate(8, MultiSelect_ng_container_8_Template, 1, 0, \"ng-container\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵelement(10, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, MultiSelect_div_11_Template, 9, 20, \"div\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(21, _c15, ctx.overlayVisible, ctx.display === \"chip\", ctx.focus, ctx.disabled))(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-expanded\", ctx.overlayVisible)(\"aria-labelledby\", ctx.ariaLabelledBy);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"pTooltip\", ctx.tooltip)(\"tooltipPosition\", ctx.tooltipPosition)(\"positionStyle\", ctx.tooltipPositionStyle)(\"tooltipStyleClass\", ctx.tooltipStyleClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(26, _c16, ctx.valuesAsString === (ctx.defaultLabel || ctx.placeholder), (ctx.valuesAsString == null || ctx.valuesAsString.length === 0) && (ctx.placeholder == null || ctx.placeholder.length === 0)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.selectedItemsTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.selectedItemsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(29, _c4, ctx.value));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(31, _c17));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.dropdownIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n      }\n    },\n    directives: [i2.NgClass, i2.NgStyle, i5.Tooltip, i2.NgIf, i2.NgTemplateOutlet, i2.NgForOf, i1.Ripple, MultiSelectItem, i4.CdkVirtualScrollViewport, i4.CdkFixedSizeVirtualScroll, i4.CdkVirtualForOf],\n    styles: [\".p-multiselect{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;-ms-user-select:none;user-select:none}.p-multiselect-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-multiselect-label-container{overflow:hidden;flex:1 1 auto;cursor:pointer}.p-multiselect-label{display:block;white-space:nowrap;cursor:pointer;overflow:hidden;text-overflow:ellipsis}.p-multiselect-label-empty{overflow:hidden;visibility:hidden}.p-multiselect-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-multiselect-token-icon{cursor:pointer}.p-multiselect .p-multiselect-panel{min-width:100%}.p-multiselect-panel{position:absolute;top:0;left:0}.p-multiselect-items-wrapper{overflow:auto}.p-multiselect-items{margin:0;padding:0;list-style-type:none}.p-multiselect-item{cursor:pointer;display:flex;align-items:center;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-multiselect-header{display:flex;align-items:center;justify-content:space-between}.p-multiselect-filter-container{position:relative;flex:1 1 auto}.p-multiselect-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-multiselect-filter-container .p-inputtext{width:100%}.p-multiselect-close{display:flex;align-items:center;justify-content:center;flex-shrink:0;overflow:hidden;position:relative}.p-fluid .p-multiselect{display:flex}\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return MultiSelect;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MultiSelectModule = /*#__PURE__*/(() => {\n  class MultiSelectModule {}\n\n  MultiSelectModule.ɵfac = function MultiSelectModule_Factory(t) {\n    return new (t || MultiSelectModule)();\n  };\n\n  MultiSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MultiSelectModule\n  });\n  MultiSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, SharedModule, ScrollingModule, TooltipModule, RippleModule], SharedModule, ScrollingModule]\n  });\n  return MultiSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MULTISELECT_VALUE_ACCESSOR, MultiSelect, MultiSelectItem, MultiSelectModule }; //# sourceMappingURL=primeng-multiselect.js.map","map":null,"metadata":{},"sourceType":"module"}