{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i4 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { DomHandler } from 'primeng/dom';\nimport * as i5 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nconst _c0 = [\"container\"];\nconst _c1 = [\"list\"];\n\nfunction SpeedDial_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction SpeedDial_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SpeedDial_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.buttonTemplate);\n  }\n}\n\nfunction SpeedDial_li_6_a_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", item_r6.icon);\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"p-disabled\": a0\n  };\n};\n\nconst _c3 = function () {\n  return {\n    exact: false\n  };\n};\n\nfunction SpeedDial_li_6_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function SpeedDial_li_6_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const item_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onItemClick($event, item_r6);\n    })(\"keydown.enter\", function SpeedDial_li_6_a_1_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext();\n      const item_r6 = ctx_r17.$implicit;\n      const i_r7 = ctx_r17.index;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onItemClick($event, item_r6, i_r7);\n    });\n    i0.ɵɵtemplate(1, SpeedDial_li_6_a_1_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", item_r6.routerLink)(\"queryParams\", item_r6.queryParams)(\"ngClass\", i0.ɵɵpureFunction1(14, _c2, item_r6.disabled))(\"routerLinkActiveOptions\", item_r6.routerLinkActiveOptions || i0.ɵɵpureFunction0(16, _c3))(\"fragment\", item_r6.fragment)(\"queryParamsHandling\", item_r6.queryParamsHandling)(\"preserveFragment\", item_r6.preserveFragment)(\"skipLocationChange\", item_r6.skipLocationChange)(\"replaceUrl\", item_r6.replaceUrl)(\"state\", item_r6.state);\n    i0.ɵɵattribute(\"target\", item_r6.target)(\"id\", item_r6.id)(\"tabindex\", item_r6.disabled || ctx_r8.readonly ? null : item_r6.tabindex ? item_r6.tabindex : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r6.icon);\n  }\n}\n\nfunction SpeedDial_li_6_ng_template_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    const item_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", item_r6.icon);\n  }\n}\n\nfunction SpeedDial_li_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function SpeedDial_li_6_ng_template_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const item_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onItemClick($event, item_r6);\n    })(\"keydown.enter\", function SpeedDial_li_6_ng_template_2_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      const item_r6 = ctx_r25.$implicit;\n      const i_r7 = ctx_r25.index;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.onItemClick($event, item_r6, i_r7);\n    });\n    i0.ɵɵtemplate(1, SpeedDial_li_6_ng_template_2_span_1_Template, 1, 1, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext();\n    const item_r6 = ctx_r26.$implicit;\n    const i_r7 = ctx_r26.index;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c2, item_r6.disabled));\n    i0.ɵɵattribute(\"href\", item_r6.url || null, i0.ɵɵsanitizeUrl)(\"target\", item_r6.target)(\"id\", item_r6.id)(\"tabindex\", item_r6.disabled || i_r7 !== ctx_r10.activeIndex && ctx_r10.readonly ? null : item_r6.tabindex ? item_r6.tabindex : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r6.icon);\n  }\n}\n\nfunction SpeedDial_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtemplate(1, SpeedDial_li_6_a_1_Template, 2, 17, \"a\", 10);\n    i0.ɵɵtemplate(2, SpeedDial_li_6_ng_template_2_Template, 2, 8, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n\n    const _r9 = i0.ɵɵreference(3);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r3.getItemStyle(i_r7))(\"tooltipOptions\", item_r6.tooltipOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isClickableRouterLink(item_r6))(\"ngIfElse\", _r9);\n  }\n}\n\nconst _c4 = function (a1) {\n  return {\n    \"p-speeddial-mask\": true,\n    \"p-speeddial-mask-visible\": a1\n  };\n};\n\nfunction SpeedDial_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 0);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.maskClassName);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c4, ctx_r4.visible))(\"ngStyle\", ctx_r4.maskStyle);\n  }\n}\n\nlet SpeedDial = /*#__PURE__*/(() => {\n  class SpeedDial {\n    constructor(el, cd) {\n      this.el = el;\n      this.cd = cd;\n      this.model = null;\n      this.direction = 'up';\n      this.transitionDelay = 30;\n      this.type = 'linear';\n      this.radius = 0;\n      this.mask = false;\n      this.disabled = false;\n      this.hideOnClickOutside = true;\n      this.showIcon = 'pi pi-plus';\n      this.rotateAnimation = true;\n      this.onVisibleChange = new EventEmitter();\n      this.visibleChange = new EventEmitter();\n      this.onClick = new EventEmitter();\n      this.onShow = new EventEmitter();\n      this.onHide = new EventEmitter();\n      this.isItemClicked = false;\n      this._visible = false;\n    }\n\n    get visible() {\n      return this._visible;\n    }\n\n    set visible(value) {\n      this._visible = value;\n\n      if (this._visible) {\n        this.bindDocumentClickListener();\n      } else {\n        this.unbindDocumentClickListener();\n      }\n    }\n\n    ngAfterViewInit() {\n      if (this.type !== 'linear') {\n        const button = DomHandler.findSingle(this.container.nativeElement, '.p-speeddial-button');\n        const firstItem = DomHandler.findSingle(this.list.nativeElement, '.p-speeddial-item');\n\n        if (button && firstItem) {\n          const wDiff = Math.abs(button.offsetWidth - firstItem.offsetWidth);\n          const hDiff = Math.abs(button.offsetHeight - firstItem.offsetHeight);\n          this.list.nativeElement.style.setProperty('--item-diff-x', `${wDiff / 2}px`);\n          this.list.nativeElement.style.setProperty('--item-diff-y', `${hDiff / 2}px`);\n        }\n      }\n    }\n\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'button':\n            this.buttonTemplate = item.template;\n            break;\n        }\n      });\n    }\n\n    show() {\n      this.onVisibleChange.emit(true);\n      this.visibleChange.emit(true);\n      this._visible = true;\n      this.onShow.emit();\n      this.bindDocumentClickListener();\n      this.cd.markForCheck();\n    }\n\n    hide() {\n      this.onVisibleChange.emit(false);\n      this.visibleChange.emit(false);\n      this._visible = false;\n      this.onHide.emit();\n      this.unbindDocumentClickListener();\n      this.cd.markForCheck();\n    }\n\n    onButtonClick(event) {\n      this.visible ? this.hide() : this.show();\n      this.onClick.emit(event);\n      this.isItemClicked = true;\n    }\n\n    onItemClick(e, item) {\n      if (item.command) {\n        item.command({\n          originalEvent: e,\n          item\n        });\n      }\n\n      this.hide();\n      this.isItemClicked = true;\n    }\n\n    calculatePointStyle(index) {\n      const type = this.type;\n\n      if (type !== 'linear') {\n        const length = this.model.length;\n        const radius = this.radius || length * 20;\n\n        if (type === 'circle') {\n          const step = 2 * Math.PI / length;\n          return {\n            left: `calc(${radius * Math.cos(step * index)}px + var(--item-diff-x, 0px))`,\n            top: `calc(${radius * Math.sin(step * index)}px + var(--item-diff-y, 0px))`\n          };\n        } else if (type === 'semi-circle') {\n          const direction = this.direction;\n          const step = Math.PI / (length - 1);\n          const x = `calc(${radius * Math.cos(step * index)}px + var(--item-diff-x, 0px))`;\n          const y = `calc(${radius * Math.sin(step * index)}px + var(--item-diff-y, 0px))`;\n\n          if (direction === 'up') {\n            return {\n              left: x,\n              bottom: y\n            };\n          } else if (direction === 'down') {\n            return {\n              left: x,\n              top: y\n            };\n          } else if (direction === 'left') {\n            return {\n              right: y,\n              top: x\n            };\n          } else if (direction === 'right') {\n            return {\n              left: y,\n              top: x\n            };\n          }\n        } else if (type === 'quarter-circle') {\n          const direction = this.direction;\n          const step = Math.PI / (2 * (length - 1));\n          const x = `calc(${radius * Math.cos(step * index)}px + var(--item-diff-x, 0px))`;\n          const y = `calc(${radius * Math.sin(step * index)}px + var(--item-diff-y, 0px))`;\n\n          if (direction === 'up-left') {\n            return {\n              right: x,\n              bottom: y\n            };\n          } else if (direction === 'up-right') {\n            return {\n              left: x,\n              bottom: y\n            };\n          } else if (direction === 'down-left') {\n            return {\n              right: y,\n              top: x\n            };\n          } else if (direction === 'down-right') {\n            return {\n              left: y,\n              top: x\n            };\n          }\n        }\n      }\n\n      return {};\n    }\n\n    calculateTransitionDelay(index) {\n      const length = this.model.length;\n      return (this.visible ? index : length - index - 1) * this.transitionDelay;\n    }\n\n    containerClass() {\n      return {\n        ['p-speeddial p-component' + ` p-speeddial-${this.type}`]: true,\n        [`p-speeddial-direction-${this.direction}`]: this.type !== 'circle',\n        'p-speeddial-opened': this.visible,\n        'p-disabled': this.disabled\n      };\n    }\n\n    buttonClass() {\n      return {\n        'p-speeddial-button p-button-rounded': true,\n        'p-speeddial-rotate': this.rotateAnimation && !this.hideIcon,\n        [this.buttonClassName]: true\n      };\n    }\n\n    get buttonIconClass() {\n      return !this.visible && this.showIcon || !this.hideIcon ? this.showIcon : this.hideIcon;\n    }\n\n    getItemStyle(index) {\n      const transitionDelay = this.calculateTransitionDelay(index);\n      const pointStyle = this.calculatePointStyle(index);\n      return Object.assign({\n        transitionDelay: `${transitionDelay}ms`\n      }, pointStyle);\n    }\n\n    isClickableRouterLink(item) {\n      return item.routerLink && !this.disabled && !item.disabled;\n    }\n\n    isOutsideClicked(event) {\n      return this.container && !(this.container.nativeElement.isSameNode(event.target) || this.container.nativeElement.contains(event.target) || this.isItemClicked);\n    }\n\n    bindDocumentClickListener() {\n      if (!this.documentClickListener && this.hideOnClickOutside) {\n        this.documentClickListener = event => {\n          if (this.visible && this.isOutsideClicked(event)) {\n            this.hide();\n          }\n\n          this.isItemClicked = false;\n        };\n\n        document.addEventListener('click', this.documentClickListener);\n      }\n    }\n\n    unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        document.removeEventListener('click', this.documentClickListener);\n        this.documentClickListener = null;\n      }\n    }\n\n    ngOnDestroy() {\n      this.unbindDocumentClickListener();\n    }\n\n  }\n\n  SpeedDial.ɵfac = function SpeedDial_Factory(t) {\n    return new (t || SpeedDial)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  SpeedDial.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SpeedDial,\n    selectors: [[\"p-speedDial\"]],\n    contentQueries: function SpeedDial_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function SpeedDial_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      id: \"id\",\n      model: \"model\",\n      visible: \"visible\",\n      style: \"style\",\n      className: \"className\",\n      direction: \"direction\",\n      transitionDelay: \"transitionDelay\",\n      type: \"type\",\n      radius: \"radius\",\n      mask: \"mask\",\n      disabled: \"disabled\",\n      hideOnClickOutside: \"hideOnClickOutside\",\n      buttonStyle: \"buttonStyle\",\n      buttonClassName: \"buttonClassName\",\n      maskStyle: \"maskStyle\",\n      maskClassName: \"maskClassName\",\n      showIcon: \"showIcon\",\n      hideIcon: \"hideIcon\",\n      rotateAnimation: \"rotateAnimation\"\n    },\n    outputs: {\n      onVisibleChange: \"onVisibleChange\",\n      visibleChange: \"visibleChange\",\n      onClick: \"onClick\",\n      onShow: \"onShow\",\n      onHide: \"onHide\"\n    },\n    decls: 8,\n    vars: 12,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"pRipple\", \"\", \"pButton\", \"\", 3, \"icon\", \"ngClass\", \"click\"], [4, \"ngIf\"], [\"role\", \"menu\", 1, \"p-speeddial-list\"], [\"list\", \"\"], [\"class\", \"p-speeddial-item\", \"pTooltip\", \"\", 3, \"ngStyle\", \"tooltipOptions\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"pTooltip\", \"\", 1, \"p-speeddial-item\", 3, \"ngStyle\", \"tooltipOptions\"], [\"pRipple\", \"\", \"class\", \"p-speeddial-action\", \"role\", \"menuitem\", 3, \"routerLink\", \"queryParams\", \"ngClass\", \"routerLinkActiveOptions\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"click\", \"keydown.enter\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"pRipple\", \"\", \"role\", \"menuitem\", 1, \"p-speeddial-action\", 3, \"routerLink\", \"queryParams\", \"ngClass\", \"routerLinkActiveOptions\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"click\", \"keydown.enter\"], [\"class\", \"p-speeddial-action-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-speeddial-action-icon\", 3, \"ngClass\"], [\"role\", \"menuitem\", \"pRipple\", \"\", 1, \"p-speeddial-action\", 3, \"ngClass\", \"click\", \"keydown.enter\"]],\n    template: function SpeedDial_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function SpeedDial_Template_button_click_2_listener($event) {\n          return ctx.onButtonClick($event);\n        });\n        i0.ɵɵtemplate(3, SpeedDial_ng_container_3_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ul\", 4, 5);\n        i0.ɵɵtemplate(6, SpeedDial_li_6_Template, 4, 4, \"li\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SpeedDial_div_7_Template, 1, 6, \"div\", 7);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(ctx.buttonStyle);\n        i0.ɵɵproperty(\"icon\", ctx.buttonIconClass)(\"ngClass\", ctx.buttonClass());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.buttonTemplate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mask && ctx.visible);\n      }\n    },\n    directives: [i1.NgClass, i1.NgStyle, i2.Ripple, i3.ButtonDirective, i1.NgIf, i1.NgForOf, i1.NgTemplateOutlet, i4.Tooltip, i5.RouterLinkWithHref],\n    styles: [\".p-speeddial{position:absolute;display:flex;z-index:1}.p-speeddial-list{margin:0;padding:0;list-style:none;display:flex;align-items:center;justify-content:center;transition:top 0s linear .2s;pointer-events:none}.p-speeddial-item{transform:scale(0);opacity:0;transition:transform .2s cubic-bezier(.4,0,.2,1) 0ms,opacity .8s;will-change:transform}.p-speeddial-action{display:flex;align-items:center;justify-content:center;border-radius:50%;position:relative;overflow:hidden;cursor:pointer}.p-speeddial-circle .p-speeddial-item,.p-speeddial-quarter-circle .p-speeddial-item,.p-speeddial-semi-circle .p-speeddial-item{position:absolute}.p-speeddial-rotate{transition:transform .25s cubic-bezier(.4,0,.2,1) 0ms;will-change:transform}.p-speeddial-mask{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0;transition:opacity .25s cubic-bezier(.25,.8,.25,1)}.p-speeddial-mask-visible{pointer-events:none;opacity:1;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.p-speeddial-opened .p-speeddial-list{pointer-events:auto}.p-speeddial-opened .p-speeddial-item{transform:scale(1);opacity:1}.p-speeddial-opened .p-speeddial-rotate{transform:rotate(45deg)}.p-speeddial-direction-up{align-items:center}.p-speeddial-direction-up,.p-speeddial-direction-up .p-speeddial-list{flex-direction:column-reverse}.p-speeddial-direction-down{align-items:center;flex-direction:column}.p-speeddial-direction-down .p-speeddial-list{flex-direction:column}.p-speeddial-direction-left{justify-content:center;flex-direction:row-reverse}.p-speeddial-direction-left .p-speeddial-list{flex-direction:row-reverse}.p-speeddial-direction-right{justify-content:center;flex-direction:row}.p-speeddial-direction-right .p-speeddial-list{flex-direction:row}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return SpeedDial;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SpeedDialModule = /*#__PURE__*/(() => {\n  class SpeedDialModule {}\n\n  SpeedDialModule.ɵfac = function SpeedDialModule_Factory(t) {\n    return new (t || SpeedDialModule)();\n  };\n\n  SpeedDialModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SpeedDialModule\n  });\n  SpeedDialModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, RippleModule, TooltipModule, RouterModule], SharedModule, ButtonModule, TooltipModule, RouterModule]\n  });\n  return SpeedDialModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SpeedDial, SpeedDialModule }; //# sourceMappingURL=primeng-speeddial.js.map","map":null,"metadata":{},"sourceType":"module"}